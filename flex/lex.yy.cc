
#line 3 "lex.yy.cc"

#define  YY_INT_ALIGNED short int

/* A lexical scanner generated by flex */

#define FLEX_SCANNER
#define YY_FLEX_MAJOR_VERSION 2
#define YY_FLEX_MINOR_VERSION 6
#define YY_FLEX_SUBMINOR_VERSION 4
#if YY_FLEX_SUBMINOR_VERSION > 0
#define FLEX_BETA
#endif

    /* The c++ scanner is a mess. The FlexLexer.h header file relies on the
     * following macro. This is required in order to pass the c++-multiple-scanners
     * test in the regression suite. We get reports that it breaks inheritance.
     * We will address this in a future release of flex, or omit the C++ scanner
     * altogether.
     */

/* First, we deal with  platform-specific or compiler-specific issues. */

/* begin standard C headers. */

/* end standard C headers. */

/* flex integer type definitions */

#ifndef FLEXINT_H
#define FLEXINT_H

/* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */

#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L

/* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
 * if you want the limit (max/min) macros for int types. 
 */
#ifndef __STDC_LIMIT_MACROS
#define __STDC_LIMIT_MACROS 1
#endif

#include <inttypes.h>
typedef int8_t flex_int8_t;
typedef uint8_t flex_uint8_t;
typedef int16_t flex_int16_t;
typedef uint16_t flex_uint16_t;
typedef int32_t flex_int32_t;
typedef uint32_t flex_uint32_t;
#else
typedef signed char flex_int8_t;
typedef short int flex_int16_t;
typedef int flex_int32_t;
typedef unsigned char flex_uint8_t; 
typedef unsigned short int flex_uint16_t;
typedef unsigned int flex_uint32_t;

/* Limits of integral types. */
#ifndef INT8_MIN
#define INT8_MIN               (-128)
#endif
#ifndef INT16_MIN
#define INT16_MIN              (-32767-1)
#endif
#ifndef INT32_MIN
#define INT32_MIN              (-2147483647-1)
#endif
#ifndef INT8_MAX
#define INT8_MAX               (127)
#endif
#ifndef INT16_MAX
#define INT16_MAX              (32767)
#endif
#ifndef INT32_MAX
#define INT32_MAX              (2147483647)
#endif
#ifndef UINT8_MAX
#define UINT8_MAX              (255U)
#endif
#ifndef UINT16_MAX
#define UINT16_MAX             (65535U)
#endif
#ifndef UINT32_MAX
#define UINT32_MAX             (4294967295U)
#endif

#ifndef SIZE_MAX
#define SIZE_MAX               (~(size_t)0)
#endif

#endif /* ! C99 */

#endif /* ! FLEXINT_H */

/* begin standard C++ headers. */
#include <iostream>
#include <errno.h>
#include <cstdlib>
#include <cstdio>
#include <cstring>
/* end standard C++ headers. */

/* TODO: this is always defined, so inline it */
#define yyconst const

#if defined(__GNUC__) && __GNUC__ >= 3
#define yynoreturn __attribute__((__noreturn__))
#else
#define yynoreturn
#endif

/* Returned upon end-of-file. */
#define YY_NULL 0

/* Promotes a possibly negative, possibly signed char to an
 *   integer in range [0..255] for use as an array index.
 */
#define YY_SC_TO_UI(c) ((YY_CHAR) (c))

/* Enter a start condition.  This macro really ought to take a parameter,
 * but we do it the disgusting crufty way forced on us by the ()-less
 * definition of BEGIN.
 */
#define BEGIN (yy_start) = 1 + 2 *
/* Translate the current start state into a value that can be later handed
 * to BEGIN to return to the state.  The YYSTATE alias is for lex
 * compatibility.
 */
#define YY_START (((yy_start) - 1) / 2)
#define YYSTATE YY_START
/* Action number for EOF rule of a given start state. */
#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)
/* Special action meaning "start processing a new file". */
#define YY_NEW_FILE yyrestart( yyin  )
#define YY_END_OF_BUFFER_CHAR 0

/* Size of default input buffer. */
#ifndef YY_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k.
 * Moreover, YY_BUF_SIZE is 2*YY_READ_BUF_SIZE in the general case.
 * Ditto for the __ia64__ case accordingly.
 */
#define YY_BUF_SIZE 32768
#else
#define YY_BUF_SIZE 16384
#endif /* __ia64__ */
#endif

/* The state buf must be large enough to hold one state per character in the main buffer.
 */
#define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))

#ifndef YY_TYPEDEF_YY_BUFFER_STATE
#define YY_TYPEDEF_YY_BUFFER_STATE
typedef struct yy_buffer_state *YY_BUFFER_STATE;
#endif

#ifndef YY_TYPEDEF_YY_SIZE_T
#define YY_TYPEDEF_YY_SIZE_T
typedef size_t yy_size_t;
#endif

extern int yyleng;

#define EOB_ACT_CONTINUE_SCAN 0
#define EOB_ACT_END_OF_FILE 1
#define EOB_ACT_LAST_MATCH 2
    
    #define YY_LESS_LINENO(n)
    #define YY_LINENO_REWIND_TO(ptr)
    
/* Return all but the first "n" matched characters back to the input stream. */
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		*yy_cp = (yy_hold_char); \
		YY_RESTORE_YY_MORE_OFFSET \
		(yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
		} \
	while ( 0 )
#define unput(c) yyunput( c, (yytext_ptr)  )

#ifndef YY_STRUCT_YY_BUFFER_STATE
#define YY_STRUCT_YY_BUFFER_STATE
struct yy_buffer_state
	{

	std::streambuf* yy_input_file;

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	int yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	int yy_n_chars;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can realloc() it to grow it, and should free() it to
	 * delete it.
	 */
	int yy_is_our_buffer;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	int yy_at_bol;

    int yy_bs_lineno; /**< The line count. */
    int yy_bs_column; /**< The column count. */

	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;

#define YY_BUFFER_NEW 0
#define YY_BUFFER_NORMAL 1
	/* When an EOF's been seen but there's still some text to process
	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
	 * shouldn't try reading from the input source any more.  We might
	 * still have a bunch of tokens to match, though, because of
	 * possible backing-up.
	 *
	 * When we actually see the EOF, we change the status to "new"
	 * (via yyrestart()), so that the user can continue scanning by
	 * just pointing yyin at a new input file.
	 */
#define YY_BUFFER_EOF_PENDING 2

	};
#endif /* !YY_STRUCT_YY_BUFFER_STATE */

/* We provide macros for accessing buffer states in case in the
 * future we want to put the buffer states in a more general
 * "scanner state".
 *
 * Returns the top of the stack, or NULL.
 */
#define YY_CURRENT_BUFFER ( (yy_buffer_stack) \
                          ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
                          : NULL)
/* Same as previous macro, but useful when we know that the buffer stack is not
 * NULL or when we need an lvalue. For internal use only.
 */
#define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]

void *yyalloc ( yy_size_t  );
void *yyrealloc ( void *, yy_size_t  );
void yyfree ( void *  );

#define yy_new_buffer yy_create_buffer
#define yy_set_interactive(is_interactive) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){ \
        yyensure_buffer_stack (); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer( yyin, YY_BUF_SIZE ); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
	}
#define yy_set_bol(at_bol) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){\
        yyensure_buffer_stack (); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer( yyin, YY_BUF_SIZE ); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
	}
#define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)

/* Begin user sect3 */
#define YY_SKIP_YYWRAP
typedef flex_uint8_t YY_CHAR;

#define yytext_ptr yytext
#define YY_INTERACTIVE

#include <FlexLexer.h>

int yyFlexLexer::yywrap() { return 1; }

/* Done after the current pattern has been matched and before the
 * corresponding action - sets up yytext.
 */
#define YY_DO_BEFORE_ACTION \
	(yytext_ptr) = yy_bp; \
	yyleng = (int) (yy_cp - yy_bp); \
	(yy_hold_char) = *yy_cp; \
	*yy_cp = '\0'; \
	(yy_c_buf_p) = yy_cp;
#define YY_NUM_RULES 2
#define YY_END_OF_BUFFER 3
/* This struct is not used in this scanner,
   but its presence is necessary. */
struct yy_trans_info
	{
	flex_int32_t yy_verify;
	flex_int32_t yy_nxt;
	};
static const flex_int16_t yy_accept[2738] =
    {   0,
        0,    0,    3,    2,    2,    2,    2,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    1,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0
    } ;

static const YY_CHAR yy_ec[256] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    2,    1,    1,    1,    1,    1,    1,    1,    3,
        4,    1,    1,    5,    1,    1,    1,    6,    6,    6,
        6,    6,    6,    6,    6,    6,    6,    1,    7,    1,
        1,    1,    1,    1,    8,    8,    8,    8,    8,    8,
        8,    8,    8,    8,    8,    8,    8,    8,    8,    8,
        8,    8,    8,    8,    8,    8,    8,    8,    8,    8,
        1,    1,    1,    1,    1,    1,    8,    8,    8,    8,

        8,    8,    9,   10,   11,    8,    8,   12,    8,   13,
       14,    8,    8,   15,   16,   17,    8,    8,    8,    8,
        8,    8,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,

        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1
    } ;

static const YY_CHAR yy_meta[18] =
    {   0,
        1,    1,    2,    1,    1,    3,    1,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2
    } ;

static const flex_int16_t yy_base[2966] =
    {   0,
        0,    6, 6140, 6141, 6126, 6124, 6127, 6119, 6122, 6120,
     6131, 6123, 6116, 6128, 6112, 6125, 6125,   19, 6123, 6118,
     6111, 6109, 6112, 6118, 6141, 6103, 6106, 6104, 6114, 6114,
     6106, 6099, 6110, 6110, 6094, 6107,   34, 6107, 6105, 6105,
        0,   50, 6093, 6091, 6094, 6100,   66, 6089, 6087, 6090,
     6082, 6085, 6083, 6093,   82, 6082, 6080, 6083, 6075, 6078,
     6076, 6087, 6079, 6072, 6083,   98, 6072, 6070, 6073, 6065,
     6068, 6066, 6077, 6069, 6062,  114, 6059, 6072,  129, 6061,
     6059, 6062, 6054, 6057, 6055, 6066, 6058, 6051, 6048,    0,
     6057, 6050, 6048, 6051, 6057,  145, 6046, 6044, 6047, 6039,

     6042, 6040, 6051, 6043, 6036, 6033, 6032, 6035, 6033, 6043,
      161, 6032, 6030, 6033, 6025, 6028, 6026, 6037, 6029, 6022,
     6019, 6033, 6025, 6018, 6029,  177, 6018, 6016, 6019, 6011,
     6014, 6012, 6023, 6015, 6008, 6005, 6004, 6017,  193, 6006,
     6004, 6007, 5999, 6002, 6000, 6011, 6003, 5996, 5993, 6006,
      209, 5995, 5993, 5996, 5988, 5991, 5989, 6000, 5992, 5985,
     5982, 5995,  225, 5984, 5982, 5985, 5977, 5980, 5978, 5989,
     5981, 5974, 5971, 5984,  241, 5973, 5971, 5974, 5966, 5969,
     5967, 5978, 5970, 5963, 5960, 5973,  257, 5962, 5960, 5963,
     5955, 5958, 5956, 5967, 5959, 5952, 5949, 5962,  273, 5951,

     5949, 5952, 5944, 5947, 5945, 5956, 5948, 5941, 5938, 5951,
      289, 5940, 5938, 5941, 5933, 5936, 5934, 5945, 5937, 5930,
     5927, 5940,  305, 5929, 5927, 5930, 5922, 5925, 5923, 5934,
     5926, 5919, 5916, 5929,  321, 5918, 5916, 5919, 5911, 5914,
     5912, 5923, 5915, 5908, 5905, 5918,  337, 5907, 5905, 5908,
     5900, 5903, 5901, 5912, 5904, 5897, 5894, 5907,  353, 5896,
     5894, 5897, 5889, 5892, 5890, 5901, 5893, 5886, 5883, 5896,
      369, 5885, 5883, 5886, 5878, 5881, 5879, 5890, 5882, 5875,
     5872, 5885,  385, 5874, 5872, 5875, 5867, 5870, 5868, 5879,
     5871, 5864, 5861, 5874,  401, 5863, 5861, 5864, 5856, 5859,

     5857, 5868, 5860, 5853, 5850, 5863,  417, 5852, 5850, 5853,
     5845, 5848, 5846, 5857, 5849, 5842, 5839, 5852,  433, 5841,
     5839, 5842, 5834, 5837, 5835, 5846, 5838, 5831, 5828, 5841,
      449, 5830, 5828, 5831, 5823, 5826, 5824, 5835, 5827, 5820,
     5817, 5830,  465, 5819, 5817, 5820, 5812, 5815, 5813, 5824,
     5816, 5809, 5806, 5819,  481, 5808, 5806, 5809, 5801, 5804,
     5802, 5813, 5805, 5798, 5795, 5808,  497, 5797, 5795, 5798,
     5790, 5793, 5791, 5802, 5794, 5787, 5784, 5797,  513, 5786,
     5784, 5787, 5779, 5782, 5780, 5791, 5783, 5776, 5773, 5786,
      529, 5775, 5773, 5776, 5768, 5771, 5769, 5780, 5772, 5765,

     5762, 5775,  545, 5764, 5762, 5765, 5757, 5760, 5758, 5769,
     5761, 5754, 5751, 5764,  561, 5753, 5751, 5754, 5746, 5749,
     5747, 5758, 5750, 5743, 5740, 5753,  577, 5742, 5740, 5743,
     5735, 5738, 5736, 5747, 5739, 5732, 5729, 5742,  593, 5731,
     5729, 5732, 5724, 5727, 5725, 5736, 5728, 5721, 5718, 5731,
      609, 5720, 5718, 5721, 5713, 5716, 5714, 5725, 5717, 5710,
     5707, 5720,  625, 5709, 5707, 5710, 5702, 5705, 5703, 5714,
     5706, 5699, 5696, 5709,  641, 5698, 5696, 5699, 5691, 5694,
     5692, 5703, 5695, 5688, 5685, 5698,  657, 5687, 5685, 5688,
     5680, 5683, 5681, 5692, 5684, 5677, 5674, 5687,  673, 5676,

     5674, 5677, 5669, 5672, 5670, 5681, 5673, 5666, 5663, 5676,
      689, 5665, 5663, 5666, 5658, 5661, 5659, 5670, 5662, 5655,
     5652, 5665,  705, 5654, 5652, 5655, 5647, 5650, 5648, 5659,
     5651, 5644, 5641, 5654,  721, 5643, 5641, 5644, 5636, 5639,
     5637, 5648, 5640, 5633, 5630, 5643,  737, 5632, 5630, 5633,
     5625,    0,    0,   13,   10,    5,    4,   21,  753,   12,
       12,   17,   11,   16,   18,   31,   25,   22,   24,   50,
      769,   44,   55,   63,   68,   76,   87,  103,  108,  104,
      103,  118,  785,  109,  109,  114,  110,  115,  115,  130,
      127,  133,  135,  161,  801,  155,  166,  174,  179,  187,

      198,  214,  219,  217,  227,  245,  817,  247,  250,  266,
      263,  279,  282,  306,  303,  309,  311,  337,  833,  331,
      342,  350,  355,  363,  374,  390,  395,  393,  403,  421,
      849,  423,  426,  442,  439,  455,  458,  482,  479,  485,
      487,  513,  865,  507,  518,  526,  531,  539,  550,  566,
      571,  569,  579,  597,  881,  599,  602,  618,  615,  631,
      634,  658,  655,  661,  663,  689,  897,  683,  694,  702,
      707,  715,  726,  742,  747,  745,  755,  773,  913,  775,
      778,  794,  791,  807,  810,  834,  831,  837,  839,  865,
      929,  859,  870,  878,  883,  891,  902,  918,  923,  921,

      930,  945,  947,  937,  940,  955,  949,  954,  954,  967,
      961,  956,  955,  970,  972,  962,  965,  980,  974,  979,
      979,  992,  986,  981,  980,  995,  997,  987,  990, 1005,
      999, 1004, 1004, 1017, 1011, 1006, 1005, 1020, 1022, 1012,
     1015, 1030, 1024, 1029, 1029, 1042, 1036, 1031, 1030, 1045,
     1047, 1037, 1040, 1055, 1049, 1054, 1054, 1067, 1061, 1056,
     1055, 1070, 1072, 1062, 1065, 1080, 1074, 1079, 1079, 1092,
     1086, 1081, 1080, 1095, 1097, 1087, 1090, 1105, 1099, 1104,
     1104, 1117, 1111, 1106, 1105, 1120, 1122, 1112, 1115, 1130,
     1124, 1129, 1129, 1142, 1136, 1131, 1130, 1145, 1147, 1137,

     1140, 1155, 1149, 1154, 1154, 1167, 1161, 1156, 1155, 1170,
     1172, 1162, 1165, 1180, 1174, 1179, 1179, 1192, 1186, 1181,
     1180, 1195, 1197, 1187, 1190, 1205, 1199, 1204, 1204, 1217,
     1211, 1206, 1205, 1220, 1222, 1212, 1215, 1230, 1224, 1229,
     1229, 1242, 1236, 1231, 1230, 1245, 1247, 1237, 1240, 1255,
     1249, 1254, 1254, 1267, 1261, 1256, 1255, 1270, 1272, 1262,
     1265, 1280, 1274, 1279, 1279, 1292, 1286, 1281, 1280, 1295,
     1297, 1287, 1290, 1305, 1299, 1304, 1304, 1317, 1311, 1306,
     1305, 1320, 1322, 1312, 1315, 1330, 1324, 1329, 1329, 1342,
     1336, 1331, 1330, 1345, 1347, 1337, 1340, 1355, 1349, 1354,

     1354, 1367, 1361, 1356, 1355, 1370, 1372, 1362, 1365, 1380,
     1374, 1379, 1379, 1392, 1386, 1381, 1380, 1395, 1397, 1387,
     1390, 1405, 1399, 1404, 1404, 1417, 1411, 1406, 1405, 1420,
     1422, 1412, 1415, 1430, 1424, 1429, 1429, 1442, 1436, 1431,
     1430, 1445, 1447, 1437, 1440, 1455, 1449, 1454, 1454, 1467,
     1461, 1456, 1455, 1470, 1472, 1462, 1465, 1480, 1474, 1479,
     1479, 1492, 1486, 1481, 1480, 1495, 1497, 1487, 1490, 1505,
     1499, 1504, 1504, 1517, 1511, 1506, 1505, 1520, 1522, 1512,
     1515, 1530, 1524, 1529, 1529, 1542, 1536, 1531, 1530, 1545,
     1547, 1537, 1540, 1555, 1549, 1554, 1554, 1567, 1561, 1556,

     1555, 1570, 1572, 1562, 1565, 1580, 1574, 1579, 1579, 1592,
     1586, 1581, 1580, 1595, 1597, 1587, 1590, 1605, 1599, 1604,
     1604, 1617, 1611, 1606, 1605, 1620, 1622, 1612, 1615, 1630,
     1624, 1629, 1629, 1642, 1636, 1631, 1630, 1645, 1647, 1637,
     1640, 1655, 1649, 1654, 1654, 1667, 1661, 1656, 1655, 1670,
     1672, 1662, 1665, 1680, 1674, 1679, 1679, 1692, 1686, 1681,
     1680, 1695, 1697, 1687, 1690, 1705, 1699, 1704, 1704, 1717,
     1711, 1706, 1705, 1720, 1722, 1712, 1715, 1730, 1724, 1729,
     1729, 1742, 1736, 1731, 1730, 1745, 1747, 1737, 1740, 1755,
     1749, 1754, 1754, 1767, 1761, 1756, 1755, 1770, 1772, 1762,

     1765, 1780, 1774, 1779, 1779, 1792, 1786, 1781, 1780, 1795,
     1797, 1787, 1790, 1805, 1799, 1804, 1804, 1817, 1811, 1806,
     1805, 1820, 1822, 1812, 1815, 1830, 1824, 1829, 1829, 1842,
     1836, 1831, 1830, 1845, 1847, 1837, 1840, 1855, 1849, 1854,
     1854, 1867, 1861, 1856, 1855, 1870, 1872, 1862, 1865, 1880,
     1874, 1879, 1879, 1892, 1886, 1881, 1880, 1895, 1897, 1887,
     1890, 1905, 1899, 1904, 1904, 1917, 1911, 1906, 1905, 1920,
     1922, 1912, 1915, 1930, 1924, 1929, 1929, 1942, 1936, 1931,
     1930, 1945, 1947, 1937, 1940, 1955, 1949, 1954, 1954, 1967,
     1961, 1956, 1955, 1970, 1972, 1962, 1965, 1980, 1974, 1979,

     1979, 1992, 1986, 1981, 1980, 1995, 1997, 1987, 1990, 2005,
     1999, 2004, 2004, 2017, 2011, 2006, 2005, 2020, 2022, 2012,
     2015, 2030, 2024, 2029, 2029, 2042, 2036, 2031, 2030, 2045,
     2047, 2037, 2040, 2055, 2049, 2054, 2054, 2067, 2061, 2056,
     2055, 2070, 2072, 2062, 2065, 2080, 2074, 2079, 2079, 2092,
     2086, 2081, 2080, 2095, 2097, 2087, 2090, 2105, 2099, 2104,
     2104, 2117, 2111, 2106, 2105, 2120, 2122, 2112, 2115, 2130,
     2124, 2129, 2129, 2142, 2136, 2131, 2130, 2145, 2147, 2137,
     2140, 2155, 2149, 2154, 2154, 2167, 2161, 2156, 2155, 2170,
     2172, 2162, 2165, 2180, 2174, 2179, 2179, 2192, 2186, 2181,

     2180, 2195, 2197, 2187, 2190, 2205, 2199, 2204, 2204, 2217,
     2211, 2206, 2205, 2220, 2222, 2212, 2215, 2230, 2224, 2229,
     2229, 2242, 2236, 2231, 2230, 2245, 2247, 2237, 2240, 2255,
     2249, 2254, 2254, 2267, 2261, 2256, 2255, 2270, 2272, 2262,
     2265, 2280, 2274, 2279, 2279, 2292, 2286, 2281, 2280, 2295,
     2297, 2287, 2290, 2305, 2299, 2304, 2304, 2317, 2311, 2306,
     2305, 2320, 2322, 2312, 2315, 2330, 2324, 2329, 2329, 2342,
     2336, 2331, 2330, 2345, 2347, 2337, 2340, 2355, 2349, 2354,
     2354, 2367, 2361, 2356, 2355, 2370, 2372, 2362, 2365, 2380,
     2374, 2379, 2379, 2392, 2386, 2381, 2380, 2395, 2397, 2387,

     2390, 2405, 2399, 2404, 2404, 2417, 2411, 2406, 2405, 2420,
     2422, 2412, 2415, 2430, 2424, 2429, 2429, 2442, 2436, 2431,
     2430, 2445, 2447, 2437, 2440, 2455, 2449, 2454, 2454, 2467,
     2461, 2456, 2455, 2470, 2472, 2462, 2465, 2480, 2474, 2479,
     2479, 2492, 2486, 2481, 2480, 2495, 2497, 2487, 2490, 2505,
     2499, 2504, 2504, 2517, 2511, 2506, 2505, 2520, 2522, 2512,
     2515, 2530, 2524, 2529, 2529, 2542, 2536, 2531, 2530, 2545,
     2547, 2537, 2540, 2555, 2549, 2554, 2554, 2567, 2561, 2556,
     2555, 2570, 2572, 2562, 2565, 2580, 2574, 2579, 2579, 2592,
     2586, 2581, 2580, 2595, 2597, 2587, 2590, 2605, 2599, 2604,

     2604, 2617, 2611, 2606, 2605, 2620, 2622, 2612, 2615, 2630,
     2624, 2629, 2629, 2642, 2636, 2631, 2630, 2645, 2647, 2637,
     2640, 2655, 2649, 2654, 2654, 2667, 2661, 2656, 2655, 2670,
     2672, 2662, 2665, 2680, 2674, 2679, 2679, 2692, 2686, 2681,
     2680, 2695, 2697, 2687, 2690, 2705, 2699, 2704, 2704, 2717,
     2711, 2706, 2705, 2720, 2722, 2712, 2715, 2730, 2724, 2729,
     2729, 2742, 2736, 2731, 2730, 2745, 2747, 2737, 2740, 2755,
     2749, 2754, 2754, 2767, 2761, 2756, 2755, 2770, 2772, 2762,
     2765, 2780, 2774, 2779, 2779, 2792, 2786, 2781, 2780, 2795,
     2797, 2787, 2790, 2805, 2799, 2804, 2804, 2817, 2811, 2806,

     2805, 2820, 2822, 2812, 2815, 2830, 2824, 2829, 2829, 2842,
     2836, 2831, 2830, 2845, 2847, 2837, 2840, 2855, 2849, 2854,
     2854, 2867, 2861, 2856, 2855, 2870, 2872, 2862, 2865, 2880,
     2874, 2879, 2879, 2892, 2886, 2881, 2880, 2895, 2897, 2887,
     2890, 2905, 2899, 2904, 2904, 2917, 2911, 2906, 2905, 2920,
     2922, 2912, 2915, 2930, 2924, 2929, 2929, 2942, 2936, 2931,
     2930, 2945, 2947, 2937, 2940, 2955, 2949, 2954, 2954, 2967,
     2961, 2956, 2955, 2970, 2972, 2962, 2965, 2980, 2974, 2979,
     2979, 2992, 2986, 2981, 2980, 2995, 2997, 2987, 2990, 3005,
     2999, 3004, 3004, 3017, 3011, 3006, 3005, 3020, 3022, 3012,

     3015, 3030, 3024, 3029, 3029, 3042, 3036, 3031, 3030, 3045,
     3047, 3037, 3040, 3055, 3049, 3054, 3054, 3067, 3061, 3056,
     3055, 3070, 3072, 3062, 3065, 3080, 3074, 3079, 3079, 3092,
     3086, 3081, 3080, 3095, 3097, 3087, 3090, 3105, 3099, 3104,
     3104, 3117, 3111, 3106, 3105, 3120, 3122, 3112, 3115, 3130,
     3124, 3129, 3129, 3142, 3136, 3131, 3130, 3145, 3147, 3137,
     3140, 3155, 3149, 3154, 3154, 3167, 3161, 3156, 3155, 3170,
     3172, 3162, 3165, 3180, 3174, 3179, 3179, 3192, 3186, 3181,
     3180, 3195, 3197, 3187, 3190, 3205, 3199, 3204, 3204, 3217,
     3211, 3206, 3205, 3220, 3222, 3212, 3215, 3230, 3224, 3229,

     3229, 3242, 3236, 3231, 3230, 3245, 3247, 3237, 3240, 3255,
     3249, 3254, 3254, 3267, 3261, 3256, 3255, 3270, 3272, 3262,
     3265, 3280, 3274, 3279, 3279, 3292, 3286, 3281, 3280, 3295,
     3297, 3287, 3290, 3305, 3299, 3304, 3304, 3317, 3311, 3306,
     3305, 3320, 3322, 3312, 3315, 3330, 3324, 3329, 3329, 3342,
     3336, 3331, 3330, 3345, 3347, 3337, 3340, 3355, 3349, 3354,
     3354, 3367, 3361, 3356, 3355, 3370, 3372, 3362, 3365, 3380,
     3374, 3379, 3379, 3392, 3386, 3381, 3380, 3395, 3397, 3387,
     3390, 3405, 3399, 3404, 3404, 3417, 3411, 3406, 3405, 3420,
     3422, 3412, 3415, 3430, 3424, 3429, 3429, 3442, 3436, 3431,

     3430, 3445, 3447, 3437, 3440, 3455, 3449, 3454, 3454, 3467,
     3461, 3456, 3455, 3470, 3472, 3462, 3465, 3480, 3474, 3479,
     3479, 3492, 3486, 3481, 3480, 3495, 3497, 3487, 3490, 3505,
     3499, 3504, 3504, 3517, 3511, 3506, 3505, 3520, 3522, 3512,
     3515, 3530, 3524, 3529, 3529, 3542, 3536, 3531, 3530, 3545,
     3547, 3537, 3540, 3555, 3549, 3554, 3554, 3567, 3561, 3556,
     3555, 3570, 3572, 3562, 3565, 3580, 3574, 3579, 3579, 3592,
     3586, 3581, 3580, 3595, 3597, 3587, 3590, 3605, 3599, 3604,
     3604, 3617, 3611, 3606, 3605, 3620, 3622, 3612, 3615, 3630,
     3624, 3629, 3629, 3642, 3636, 3631, 3630, 3645, 3647, 3637,

     3640, 3655, 3649, 3654, 3654, 3667, 3661, 3656, 3655, 3670,
     3672, 3662, 3665, 3680, 3674, 3679, 3679, 3692, 3686, 3681,
     3680, 3695, 3697, 3687, 3690, 3705, 3699, 3704, 3704, 3717,
     3711, 3706, 3705, 3720, 3722, 3712, 3715, 3730, 3724, 3729,
     3729, 3742, 3736, 3731, 3730, 3745, 3747, 3737, 3740, 3755,
     3749, 3754, 3754, 3767, 3761, 3756, 3755, 3770, 3772, 3762,
     3765, 3780, 3774, 3779, 3779, 3792, 3786, 3781, 3780, 3795,
     3797, 3787, 3790, 3805, 3799, 3804, 3804, 3817, 3811, 3806,
     3805, 3820, 3822, 3812, 3815, 3830, 3824, 3829, 3829, 3842,
     3836, 3831, 3830, 3845, 3847, 3837, 3840, 3855, 3849, 3854,

     3854, 3867, 3861, 3856, 3855, 3870, 3872, 3862, 3865, 3880,
     3874, 3879, 3879, 3892, 3886, 3881, 3880, 3895, 3897, 3887,
     3890, 3905, 3899, 3904, 3904, 3917, 3911, 3906, 3905, 3920,
     3922, 3912, 3915, 3930, 3924, 3929, 3929, 3942, 3936, 3931,
     3930, 3945, 3947, 3937, 3940, 3955, 3949, 3954, 3954, 3967,
     3961, 3956, 3955, 3970, 3972, 3962, 3965, 3980, 3974, 3979,
     3979, 3992, 3986, 3981, 3980, 3995, 3997, 3987, 3990, 4005,
     3999, 4004, 4004, 4017, 4011, 4006, 4005, 4020, 4022, 4012,
     4015, 4030, 4024, 4029, 4029, 4042, 4036, 4031, 4030, 4045,
     4047, 4037, 4040, 4055, 4049, 4054, 4054, 4067, 4061, 4056,

     4055, 4070, 4072, 4062, 4065, 4080, 4074, 4079, 4079, 4092,
     4086, 4081, 4080, 4095, 4097, 4087, 4090, 4105, 4099, 4104,
     4104, 4117, 4111, 4106, 4105, 4120, 4122, 4112, 4115, 4130,
     4124, 4129, 4129, 4142, 4136, 4131, 4130, 4145, 4147, 4137,
     4140, 4155, 4149, 4154, 4154, 4167, 4161, 4156, 4155, 4170,
     4172, 4162, 4165, 4180, 4174, 4179, 4179, 4192, 4186, 4181,
     4180, 4195, 4197, 4187, 4190, 4205, 4199, 4204, 4204, 4217,
     4211, 4206, 4205, 4220, 4222, 4212, 4215, 4230, 4224, 4229,
     4229, 4242, 4236, 4231, 4230, 4245, 4247, 4237, 4240, 4255,
     4249, 4254, 4254, 4267, 4261, 4256, 4255, 4270, 4272, 4262,

     4265, 4280, 4274, 4279, 4279, 4292, 4286, 4281, 4280, 4295,
     4297, 4287, 4290, 4305, 4299, 4304, 4304, 4317, 4311, 4306,
     4305, 4320, 4322, 4312, 4315, 4330, 4324, 4329, 4329, 4342,
     4336, 4331, 4330, 4345, 4347, 4337, 4340, 4355, 4349, 4354,
     4354, 4367, 4361, 4356, 4355, 4370, 4372, 4362, 4365, 4380,
     4374, 4379, 4379, 4392, 4386, 4381, 4380, 4395, 4397, 4387,
     4390, 4405, 4399, 4404, 4404, 4417, 4411, 4406, 4405, 4420,
     4422, 4412, 4415, 4430, 4424, 4429, 4429, 4442, 4436, 4431,
     4430, 4445, 4447, 4437, 4440, 4455, 4449, 4454, 4454, 4467,
     4461, 4456, 4455, 4470, 4472, 4462, 4465, 4480, 4474, 4479,

     4479, 4492, 4486, 4481, 4480, 4495, 4497, 4487, 4490, 4505,
     4499, 4504, 4504, 4517, 4511, 4506, 4505, 4520, 4522, 4512,
     4515, 4530, 4524, 4529, 4529, 4542, 4536, 4531, 4530, 4545,
     4547, 4537, 4540, 4555, 4549, 4554, 4554, 4567, 4561, 4556,
     4555, 4570, 4572, 4562, 4565, 4580, 4574, 4579, 4579, 4592,
     4586, 4581, 4580, 4595, 4597, 4587, 4590, 4605, 4599, 4604,
     4604, 4617, 4611, 4606, 4605, 4620, 4622, 4612, 4615, 4630,
     4624, 4629, 4629, 4642, 4636, 4631, 4630, 4645, 4647, 4637,
     4640, 4655, 4649, 4654, 4654, 4667, 4661, 4656, 4655, 4670,
     4672, 4662, 4665, 4680, 4674, 4679, 4679, 4692, 4686, 4681,

     4680, 4695, 4697, 4687, 4690, 4705, 4699, 4704, 4704, 4717,
     4711, 4706, 4705, 4720, 4722, 4712, 4715, 4730, 4724, 4729,
     4729, 4742, 4736, 4731, 4730, 4745, 4747, 4737, 4740, 4755,
     4749, 4754, 4754, 4767, 4761, 4756, 4755, 4770, 4772, 4762,
     4765, 4780, 4774, 4779, 4779, 4792, 4786, 4781, 4780, 4795,
     4797, 4787, 4790, 4805, 4799, 4804, 4804, 4817, 4811, 4806,
     4805, 4820, 4822, 4812, 4815, 4830, 4824, 4829, 4829, 4842,
     4836, 4831, 4830, 4845, 4847, 4837, 4840, 4855, 4849, 4854,
     4854, 4867, 4861, 4856, 4855, 4870, 4872, 4862, 4865, 4880,
     4874, 4879, 4879, 4892, 4886, 4881, 4880, 4895, 4897, 4887,

     4890, 4905, 4899, 4904, 4904, 4917, 4911, 4906, 4905, 4920,
     4922, 4912, 4915, 4930, 4924, 4929, 4929, 4942, 4936, 4931,
     4930, 4945, 4947, 4937, 4940, 4955, 4949, 4954, 4954, 4967,
     4961, 4956, 4955, 4970, 4972, 4962, 4965, 4980, 4974, 4979,
     4979, 4992, 4986, 4981, 4980, 4995, 4997, 4987, 4990, 5005,
     4999, 5004, 5004, 5017, 5011, 5006, 5005, 5020, 5022, 5012,
     5015, 5030, 5024, 5029, 5029, 5042, 5036, 5031, 5030, 5045,
     5047, 5037, 5040, 5055, 5049, 5054, 5054, 5067, 5061, 5056,
     5055, 5071, 5061, 5064, 5079, 5073, 5078, 5078, 5091, 5085,
     5080, 5079, 5095, 5085, 5088, 5103, 5097, 5102, 5102, 5115,

     5109, 5104, 5103, 5119, 5109, 5112, 5127, 5121, 5126, 5126,
     5139, 5133, 5128, 5127, 5143, 5133, 5136, 5151, 5145, 5150,
     5150, 5163, 5157, 5152, 5151, 5167, 5157, 5159, 5164, 5158,
     5163, 5163, 5178, 5172, 5167, 5167, 6141, 5184, 5187, 5188,
     5190, 5192, 5194, 5196, 5199, 5200, 5202, 5204, 5206, 5208,
     5210, 5212, 5214, 5216, 5218, 5220, 5222, 5224, 5226, 5228,
     5230, 5232, 5234, 5236, 5238, 5240, 5242, 5244, 5246, 5248,
     5250, 5252, 5254, 5256, 5258, 5260, 5262, 5264, 5266, 5268,
     5270, 5272, 5274, 5276, 5278, 5280, 5282, 5284, 5286, 5288,
     5290, 5292, 5294, 5296, 5298, 5300, 5302, 5304, 5306, 5308,

     5310, 5312, 5314, 5316, 5318, 5320, 5322, 5324, 5326, 5328,
     5330, 5332, 5334, 5336, 5338, 5340, 5342, 5344, 5346, 5348,
     5350, 5352, 5354, 5356, 5358, 5360, 5362, 5364, 5366, 5368,
     5370, 5372, 5374, 5376, 5378, 5380, 5382, 5384, 5386, 5388,
     5390, 5392, 5394, 5396, 5398, 5400, 5402, 5404, 5406, 5408,
     5410, 5412, 5414, 5416, 5418, 5420, 5422, 5424, 5426, 5428,
     5430, 5432, 5434, 5436, 5438, 5440, 5442, 5444, 5446, 5448,
     5450, 5452, 5454, 5456, 5458, 5460, 5462, 5464, 5466, 5468,
     5470, 5472, 5474, 5476, 5478, 5480, 5482, 5484, 5486, 5488,
     5490, 5492, 5494, 5496, 5498, 5500, 5502, 5504, 5506, 5508,

     5510, 5512, 5514, 5516, 5518, 5520, 5522, 5524, 5526, 5528,
     5530, 5532, 5534, 5536, 5538, 5540, 5542, 5544, 5546, 5548,
     5550, 5552, 5554, 5556, 5558, 5560, 5562, 5564, 5566, 5568,
     5570, 5572, 5574, 5576, 5578, 5580, 5582, 5584, 5586, 5588,
     5590, 5592, 5594, 5596, 5598, 5600, 5602, 5604, 5606, 5608,
     5610, 5612, 5614, 5616, 5618, 5620, 5622, 5624, 5626, 5628,
     5630, 5632, 5634, 5636, 5638
    } ;

static const flex_int16_t yy_def[2966] =
    {   0,
     2738, 2738, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737,
     2737, 2737, 2737, 2739, 2737, 2740, 2739, 2737, 2741, 2737,
     2737, 2737, 2737, 2742, 2737, 2737, 2737, 2737, 2743, 2737,
     2737, 2737, 2744, 2745, 2737, 2746, 2737, 2745, 2747,   18,
       40, 2737,   42,   42,   42, 2748, 2737,   47,   47,   47,
       47,   47,   47, 2749, 2737,   55,   55,   55,   55,   55,
       55,   55,   55,   55, 2750, 2737,   66,   66,   66,   66,
       66,   66,   66,   66,   66, 2745,   66, 2751, 2737,   79,
       79,   79,   79,   79,   79,   79,   79,   79,   79,   76,
       37,   37,   37,   37, 2752, 2737,   96,   96,   96,   96,

       96,   96,   96,   96,   96,   96,   42,   42,   42, 2753,
     2737,  111,  111,  111,  111,  111,  111,  111,  111,  111,
      111,   47,   47,   47, 2754, 2737,  126,  126,  126,  126,
      126,  126,  126,  126,  126,  126,   55, 2755, 2737,  139,
      139,  139,  139,  139,  139,  139,  139,  139,  139, 2756,
     2737,  151,  151,  151,  151,  151,  151,  151,  151,  151,
      151, 2757, 2737,  163,  163,  163,  163,  163,  163,  163,
      163,  163,  163, 2758, 2737,  175,  175,  175,  175,  175,
      175,  175,  175,  175,  175, 2759, 2737,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187, 2760, 2737,  199,

      199,  199,  199,  199,  199,  199,  199,  199,  199, 2761,
     2737,  211,  211,  211,  211,  211,  211,  211,  211,  211,
      211, 2762, 2737,  223,  223,  223,  223,  223,  223,  223,
      223,  223,  223, 2763, 2737,  235,  235,  235,  235,  235,
      235,  235,  235,  235,  235, 2764, 2737,  247,  247,  247,
      247,  247,  247,  247,  247,  247,  247, 2765, 2737,  259,
      259,  259,  259,  259,  259,  259,  259,  259,  259, 2766,
     2737,  271,  271,  271,  271,  271,  271,  271,  271,  271,
      271, 2767, 2737,  283,  283,  283,  283,  283,  283,  283,
      283,  283,  283, 2768, 2737,  295,  295,  295,  295,  295,

      295,  295,  295,  295,  295, 2769, 2737,  307,  307,  307,
      307,  307,  307,  307,  307,  307,  307, 2770, 2737,  319,
      319,  319,  319,  319,  319,  319,  319,  319,  319, 2771,
     2737,  331,  331,  331,  331,  331,  331,  331,  331,  331,
      331, 2772, 2737,  343,  343,  343,  343,  343,  343,  343,
      343,  343,  343, 2773, 2737,  355,  355,  355,  355,  355,
      355,  355,  355,  355,  355, 2774, 2737,  367,  367,  367,
      367,  367,  367,  367,  367,  367,  367, 2775, 2737,  379,
      379,  379,  379,  379,  379,  379,  379,  379,  379, 2776,
     2737,  391,  391,  391,  391,  391,  391,  391,  391,  391,

      391, 2777, 2737,  403,  403,  403,  403,  403,  403,  403,
      403,  403,  403, 2778, 2737,  415,  415,  415,  415,  415,
      415,  415,  415,  415,  415, 2779, 2737,  427,  427,  427,
      427,  427,  427,  427,  427,  427,  427, 2780, 2737,  439,
      439,  439,  439,  439,  439,  439,  439,  439,  439, 2781,
     2737,  451,  451,  451,  451,  451,  451,  451,  451,  451,
      451, 2782, 2737,  463,  463,  463,  463,  463,  463,  463,
      463,  463,  463, 2783, 2737,  475,  475,  475,  475,  475,
      475,  475,  475,  475,  475, 2784, 2737,  487,  487,  487,
      487,  487,  487,  487,  487,  487,  487, 2785, 2737,  499,

      499,  499,  499,  499,  499,  499,  499,  499,  499, 2786,
     2737,  511,  511,  511,  511,  511,  511,  511,  511,  511,
      511, 2787, 2737,  523,  523,  523,  523,  523,  523,  523,
      523,  523,  523, 2788, 2737,  535,  535,  535,  535,  535,
      535,  535,  535,  535,  535, 2789, 2737,  547,  547,  547,
      547,  547,  547,  547,  547,  547,  547, 2790, 2737,  559,
      559,  559,  559,  559,  559,  559,  559,  559,  559, 2791,
     2737,  571,  571,  571,  571,  571,  571,  571,  571,  571,
      571, 2792, 2737,  583,  583,  583,  583,  583,  583,  583,
      583,  583,  583, 2793, 2737,  595,  595,  595,  595,  595,

      595,  595,  595,  595,  595, 2794, 2737,  607,  607,  607,
      607,  607,  607,  607,  607,  607,  607, 2795, 2737,  619,
      619,  619,  619,  619,  619,  619,  619,  619,  619, 2796,
     2737,  631,  631,  631,  631,  631,  631,  631,  631,  631,
      631, 2797, 2737,  643,  643,  643,  643,  643,  643,  643,
      643,  643,  643, 2798, 2737,  655,  655,  655,  655,  655,
      655,  655,  655,  655,  655, 2799, 2737,  667,  667,  667,
      667,  667,  667,  667,  667,  667,  667, 2800, 2737,  679,
      679,  679,  679,  679,  679,  679,  679,  679,  679, 2801,
     2737,  691,  691,  691,  691,  691,  691,  691,  691,  691,

      691, 2802, 2737,  703,  703,  703,  703,  703,  703,  703,
      703,  703,  703, 2803, 2737,  715,  715,  715,  715,  715,
      715,  715,  715,  715,  715, 2804, 2737,  727,  727,  727,
      727,  727,  727,  727,  727,  727,  727, 2805, 2737,  739,
      739,  739,  739,  739,  739,  739,  739,  739,  739, 2806,
     2737,  751,  751,  751,  751,  751,  751,  751,  751,  751,
      751, 2807, 2737,  763,  763,  763,  763,  763,  763,  763,
      763,  763,  763, 2808, 2737,  775,  775,  775,  775,  775,
      775,  775,  775,  775,  775, 2809, 2737,  787,  787,  787,
      787,  787,  787,  787,  787,  787,  787, 2810, 2737,  799,

      799,  799,  799,  799,  799,  799,  799,  799,  799, 2811,
     2737,  811,  811,  811,  811,  811,  811,  811,  811,  811,
      811, 2812, 2737,  823,  823,  823,  823,  823,  823,  823,
      823,  823,  823, 2813, 2737,  835,  835,  835,  835,  835,
      835,  835,  835,  835,  835, 2814, 2737,  847,  847,  847,
      847,  847,  847,  847,  847,  847,  847, 2815, 2737,  859,
      859,  859,  859,  859,  859,  859,  859,  859,  859, 2816,
     2737,  871,  871,  871,  871,  871,  871,  871,  871,  871,
      871, 2817, 2737,  883,  883,  883,  883,  883,  883,  883,
      883,  883,  883, 2818, 2737,  895,  895,  895,  895,  895,

      895,  895,  895,  895,  895, 2819, 2737,  907,  907,  907,
      907,  907,  907,  907,  907,  907,  907, 2820, 2737,  919,
      919,  919,  919,  919,  919,  919,  919,  919,  919, 2821,
     2737,  931,  931,  931,  931,  931,  931,  931,  931,  931,
      931, 2822, 2737,  943,  943,  943,  943,  943,  943,  943,
      943,  943,  943, 2823, 2737,  955,  955,  955,  955,  955,
      955,  955,  955,  955,  955, 2824, 2737,  967,  967,  967,
      967,  967,  967,  967,  967,  967,  967, 2825, 2737,  979,
      979,  979,  979,  979,  979,  979,  979,  979,  979, 2826,
     2737,  991,  991,  991,  991,  991,  991,  991,  991,  991,

      991, 2827, 2737, 1003, 1003, 1003, 1003, 1003, 1003, 1003,
     1003, 1003, 1003, 2828, 2737, 1015, 1015, 1015, 1015, 1015,
     1015, 1015, 1015, 1015, 1015, 2829, 2737, 1027, 1027, 1027,
     1027, 1027, 1027, 1027, 1027, 1027, 1027, 2830, 2737, 1039,
     1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039, 2831,
     2737, 1051, 1051, 1051, 1051, 1051, 1051, 1051, 1051, 1051,
     1051, 2832, 2737, 1063, 1063, 1063, 1063, 1063, 1063, 1063,
     1063, 1063, 1063, 2833, 2737, 1075, 1075, 1075, 1075, 1075,
     1075, 1075, 1075, 1075, 1075, 2834, 2737, 1087, 1087, 1087,
     1087, 1087, 1087, 1087, 1087, 1087, 1087, 2835, 2737, 1099,

     1099, 1099, 1099, 1099, 1099, 1099, 1099, 1099, 1099, 2836,
     2737, 1111, 1111, 1111, 1111, 1111, 1111, 1111, 1111, 1111,
     1111, 2837, 2737, 1123, 1123, 1123, 1123, 1123, 1123, 1123,
     1123, 1123, 1123, 2838, 2737, 1135, 1135, 1135, 1135, 1135,
     1135, 1135, 1135, 1135, 1135, 2839, 2737, 1147, 1147, 1147,
     1147, 1147, 1147, 1147, 1147, 1147, 1147, 2840, 2737, 1159,
     1159, 1159, 1159, 1159, 1159, 1159, 1159, 1159, 1159, 2841,
     2737, 1171, 1171, 1171, 1171, 1171, 1171, 1171, 1171, 1171,
     1171, 2842, 2737, 1183, 1183, 1183, 1183, 1183, 1183, 1183,
     1183, 1183, 1183, 2843, 2737, 1195, 1195, 1195, 1195, 1195,

     1195, 1195, 1195, 1195, 1195, 2844, 2737, 1207, 1207, 1207,
     1207, 1207, 1207, 1207, 1207, 1207, 1207, 2845, 2737, 1219,
     1219, 1219, 1219, 1219, 1219, 1219, 1219, 1219, 1219, 2846,
     2737, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231, 1231,
     1231, 2847, 2737, 1243, 1243, 1243, 1243, 1243, 1243, 1243,
     1243, 1243, 1243, 2848, 2737, 1255, 1255, 1255, 1255, 1255,
     1255, 1255, 1255, 1255, 1255, 2849, 2737, 1267, 1267, 1267,
     1267, 1267, 1267, 1267, 1267, 1267, 1267, 2850, 2737, 1279,
     1279, 1279, 1279, 1279, 1279, 1279, 1279, 1279, 1279, 2851,
     2737, 1291, 1291, 1291, 1291, 1291, 1291, 1291, 1291, 1291,

     1291, 2852, 2737, 1303, 1303, 1303, 1303, 1303, 1303, 1303,
     1303, 1303, 1303, 2853, 2737, 1315, 1315, 1315, 1315, 1315,
     1315, 1315, 1315, 1315, 1315, 2854, 2737, 1327, 1327, 1327,
     1327, 1327, 1327, 1327, 1327, 1327, 1327, 2855, 2737, 1339,
     1339, 1339, 1339, 1339, 1339, 1339, 1339, 1339, 1339, 2856,
     2737, 1351, 1351, 1351, 1351, 1351, 1351, 1351, 1351, 1351,
     1351, 2857, 2737, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 2858, 2737, 1375, 1375, 1375, 1375, 1375,
     1375, 1375, 1375, 1375, 1375, 2859, 2737, 1387, 1387, 1387,
     1387, 1387, 1387, 1387, 1387, 1387, 1387, 2860, 2737, 1399,

     1399, 1399, 1399, 1399, 1399, 1399, 1399, 1399, 1399, 2861,
     2737, 1411, 1411, 1411, 1411, 1411, 1411, 1411, 1411, 1411,
     1411, 2862, 2737, 1423, 1423, 1423, 1423, 1423, 1423, 1423,
     1423, 1423, 1423, 2863, 2737, 1435, 1435, 1435, 1435, 1435,
     1435, 1435, 1435, 1435, 1435, 2864, 2737, 1447, 1447, 1447,
     1447, 1447, 1447, 1447, 1447, 1447, 1447, 2865, 2737, 1459,
     1459, 1459, 1459, 1459, 1459, 1459, 1459, 1459, 1459, 2866,
     2737, 1471, 1471, 1471, 1471, 1471, 1471, 1471, 1471, 1471,
     1471, 2867, 2737, 1483, 1483, 1483, 1483, 1483, 1483, 1483,
     1483, 1483, 1483, 2868, 2737, 1495, 1495, 1495, 1495, 1495,

     1495, 1495, 1495, 1495, 1495, 2869, 2737, 1507, 1507, 1507,
     1507, 1507, 1507, 1507, 1507, 1507, 1507, 2870, 2737, 1519,
     1519, 1519, 1519, 1519, 1519, 1519, 1519, 1519, 1519, 2871,
     2737, 1531, 1531, 1531, 1531, 1531, 1531, 1531, 1531, 1531,
     1531, 2872, 2737, 1543, 1543, 1543, 1543, 1543, 1543, 1543,
     1543, 1543, 1543, 2873, 2737, 1555, 1555, 1555, 1555, 1555,
     1555, 1555, 1555, 1555, 1555, 2874, 2737, 1567, 1567, 1567,
     1567, 1567, 1567, 1567, 1567, 1567, 1567, 2875, 2737, 1579,
     1579, 1579, 1579, 1579, 1579, 1579, 1579, 1579, 1579, 2876,
     2737, 1591, 1591, 1591, 1591, 1591, 1591, 1591, 1591, 1591,

     1591, 2877, 2737, 1603, 1603, 1603, 1603, 1603, 1603, 1603,
     1603, 1603, 1603, 2878, 2737, 1615, 1615, 1615, 1615, 1615,
     1615, 1615, 1615, 1615, 1615, 2879, 2737, 1627, 1627, 1627,
     1627, 1627, 1627, 1627, 1627, 1627, 1627, 2880, 2737, 1639,
     1639, 1639, 1639, 1639, 1639, 1639, 1639, 1639, 1639, 2881,
     2737, 1651, 1651, 1651, 1651, 1651, 1651, 1651, 1651, 1651,
     1651, 2882, 2737, 1663, 1663, 1663, 1663, 1663, 1663, 1663,
     1663, 1663, 1663, 2883, 2737, 1675, 1675, 1675, 1675, 1675,
     1675, 1675, 1675, 1675, 1675, 2884, 2737, 1687, 1687, 1687,
     1687, 1687, 1687, 1687, 1687, 1687, 1687, 2885, 2737, 1699,

     1699, 1699, 1699, 1699, 1699, 1699, 1699, 1699, 1699, 2886,
     2737, 1711, 1711, 1711, 1711, 1711, 1711, 1711, 1711, 1711,
     1711, 2887, 2737, 1723, 1723, 1723, 1723, 1723, 1723, 1723,
     1723, 1723, 1723, 2888, 2737, 1735, 1735, 1735, 1735, 1735,
     1735, 1735, 1735, 1735, 1735, 2889, 2737, 1747, 1747, 1747,
     1747, 1747, 1747, 1747, 1747, 1747, 1747, 2890, 2737, 1759,
     1759, 1759, 1759, 1759, 1759, 1759, 1759, 1759, 1759, 2891,
     2737, 1771, 1771, 1771, 1771, 1771, 1771, 1771, 1771, 1771,
     1771, 2892, 2737, 1783, 1783, 1783, 1783, 1783, 1783, 1783,
     1783, 1783, 1783, 2893, 2737, 1795, 1795, 1795, 1795, 1795,

     1795, 1795, 1795, 1795, 1795, 2894, 2737, 1807, 1807, 1807,
     1807, 1807, 1807, 1807, 1807, 1807, 1807, 2895, 2737, 1819,
     1819, 1819, 1819, 1819, 1819, 1819, 1819, 1819, 1819, 2896,
     2737, 1831, 1831, 1831, 1831, 1831, 1831, 1831, 1831, 1831,
     1831, 2897, 2737, 1843, 1843, 1843, 1843, 1843, 1843, 1843,
     1843, 1843, 1843, 2898, 2737, 1855, 1855, 1855, 1855, 1855,
     1855, 1855, 1855, 1855, 1855, 2899, 2737, 1867, 1867, 1867,
     1867, 1867, 1867, 1867, 1867, 1867, 1867, 2900, 2737, 1879,
     1879, 1879, 1879, 1879, 1879, 1879, 1879, 1879, 1879, 2901,
     2737, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891,

     1891, 2902, 2737, 1903, 1903, 1903, 1903, 1903, 1903, 1903,
     1903, 1903, 1903, 2903, 2737, 1915, 1915, 1915, 1915, 1915,
     1915, 1915, 1915, 1915, 1915, 2904, 2737, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1927, 1927, 1927, 2905, 2737, 1939,
     1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 2906,
     2737, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951, 1951,
     1951, 2907, 2737, 1963, 1963, 1963, 1963, 1963, 1963, 1963,
     1963, 1963, 1963, 2908, 2737, 1975, 1975, 1975, 1975, 1975,
     1975, 1975, 1975, 1975, 1975, 2909, 2737, 1987, 1987, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 2910, 2737, 1999,

     1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 1999, 2911,
     2737, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011,
     2011, 2912, 2737, 2023, 2023, 2023, 2023, 2023, 2023, 2023,
     2023, 2023, 2023, 2913, 2737, 2035, 2035, 2035, 2035, 2035,
     2035, 2035, 2035, 2035, 2035, 2914, 2737, 2047, 2047, 2047,
     2047, 2047, 2047, 2047, 2047, 2047, 2047, 2915, 2737, 2059,
     2059, 2059, 2059, 2059, 2059, 2059, 2059, 2059, 2059, 2916,
     2737, 2071, 2071, 2071, 2071, 2071, 2071, 2071, 2071, 2071,
     2071, 2917, 2737, 2083, 2083, 2083, 2083, 2083, 2083, 2083,
     2083, 2083, 2083, 2918, 2737, 2095, 2095, 2095, 2095, 2095,

     2095, 2095, 2095, 2095, 2095, 2919, 2737, 2107, 2107, 2107,
     2107, 2107, 2107, 2107, 2107, 2107, 2107, 2920, 2737, 2119,
     2119, 2119, 2119, 2119, 2119, 2119, 2119, 2119, 2119, 2921,
     2737, 2131, 2131, 2131, 2131, 2131, 2131, 2131, 2131, 2131,
     2131, 2922, 2737, 2143, 2143, 2143, 2143, 2143, 2143, 2143,
     2143, 2143, 2143, 2923, 2737, 2155, 2155, 2155, 2155, 2155,
     2155, 2155, 2155, 2155, 2155, 2924, 2737, 2167, 2167, 2167,
     2167, 2167, 2167, 2167, 2167, 2167, 2167, 2925, 2737, 2179,
     2179, 2179, 2179, 2179, 2179, 2179, 2179, 2179, 2179, 2926,
     2737, 2191, 2191, 2191, 2191, 2191, 2191, 2191, 2191, 2191,

     2191, 2927, 2737, 2203, 2203, 2203, 2203, 2203, 2203, 2203,
     2203, 2203, 2203, 2928, 2737, 2215, 2215, 2215, 2215, 2215,
     2215, 2215, 2215, 2215, 2215, 2929, 2737, 2227, 2227, 2227,
     2227, 2227, 2227, 2227, 2227, 2227, 2227, 2930, 2737, 2239,
     2239, 2239, 2239, 2239, 2239, 2239, 2239, 2239, 2239, 2931,
     2737, 2251, 2251, 2251, 2251, 2251, 2251, 2251, 2251, 2251,
     2251, 2932, 2737, 2263, 2263, 2263, 2263, 2263, 2263, 2263,
     2263, 2263, 2263, 2933, 2737, 2275, 2275, 2275, 2275, 2275,
     2275, 2275, 2275, 2275, 2275, 2934, 2737, 2287, 2287, 2287,
     2287, 2287, 2287, 2287, 2287, 2287, 2287, 2935, 2737, 2299,

     2299, 2299, 2299, 2299, 2299, 2299, 2299, 2299, 2299, 2936,
     2737, 2311, 2311, 2311, 2311, 2311, 2311, 2311, 2311, 2311,
     2311, 2937, 2737, 2323, 2323, 2323, 2323, 2323, 2323, 2323,
     2323, 2323, 2323, 2938, 2737, 2335, 2335, 2335, 2335, 2335,
     2335, 2335, 2335, 2335, 2335, 2939, 2737, 2347, 2347, 2347,
     2347, 2347, 2347, 2347, 2347, 2347, 2347, 2940, 2737, 2359,
     2359, 2359, 2359, 2359, 2359, 2359, 2359, 2359, 2359, 2941,
     2737, 2371, 2371, 2371, 2371, 2371, 2371, 2371, 2371, 2371,
     2371, 2942, 2737, 2383, 2383, 2383, 2383, 2383, 2383, 2383,
     2383, 2383, 2383, 2943, 2737, 2395, 2395, 2395, 2395, 2395,

     2395, 2395, 2395, 2395, 2395, 2944, 2737, 2407, 2407, 2407,
     2407, 2407, 2407, 2407, 2407, 2407, 2407, 2945, 2737, 2419,
     2419, 2419, 2419, 2419, 2419, 2419, 2419, 2419, 2419, 2946,
     2737, 2431, 2431, 2431, 2431, 2431, 2431, 2431, 2431, 2431,
     2431, 2947, 2737, 2443, 2443, 2443, 2443, 2443, 2443, 2443,
     2443, 2443, 2443, 2948, 2737, 2455, 2455, 2455, 2455, 2455,
     2455, 2455, 2455, 2455, 2455, 2949, 2737, 2467, 2467, 2467,
     2467, 2467, 2467, 2467, 2467, 2467, 2467, 2950, 2737, 2479,
     2479, 2479, 2479, 2479, 2479, 2479, 2479, 2479, 2479, 2951,
     2737, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491,

     2491, 2952, 2737, 2503, 2503, 2503, 2503, 2503, 2503, 2503,
     2503, 2503, 2503, 2953, 2737, 2515, 2515, 2515, 2515, 2515,
     2515, 2515, 2515, 2515, 2515, 2954, 2737, 2527, 2527, 2527,
     2527, 2527, 2527, 2527, 2527, 2527, 2527, 2955, 2737, 2539,
     2539, 2539, 2539, 2539, 2539, 2539, 2539, 2539, 2539, 2956,
     2737, 2551, 2551, 2551, 2551, 2551, 2551, 2551, 2551, 2551,
     2551, 2957, 2737, 2563, 2563, 2563, 2563, 2563, 2563, 2563,
     2563, 2563, 2563, 2958, 2737, 2575, 2575, 2575, 2575, 2575,
     2575, 2575, 2575, 2575, 2575, 2959, 2737, 2587, 2587, 2587,
     2587, 2587, 2587, 2587, 2587, 2587, 2587, 2960, 2737, 2599,

     2599, 2599, 2599, 2599, 2599, 2599, 2599, 2599, 2599, 2961,
     2737, 2611, 2611, 2611, 2611, 2611, 2611, 2611, 2611, 2611,
     2611, 2962, 2737, 2623, 2623, 2623, 2623, 2623, 2623, 2623,
     2623, 2623, 2623, 2963, 2737, 2635, 2635, 2635, 2635, 2635,
     2635, 2635, 2635, 2635, 2635, 2964, 2737, 2647, 2647, 2647,
     2647, 2647, 2647, 2647, 2647, 2647, 2647, 2965, 2737, 2659,
     2659, 2659, 2659, 2659, 2659, 2659, 2659, 2659, 2659, 2737,
     2737, 2671, 2671, 2671, 2671, 2671, 2671, 2671, 2671, 2671,
     2671, 2737, 2682, 2682, 2682, 2682, 2682, 2682, 2682, 2682,
     2682, 2682, 2737, 2693, 2693, 2693, 2693, 2693, 2693, 2693,

     2693, 2693, 2693, 2737, 2704, 2704, 2704, 2704, 2704, 2704,
     2704, 2704, 2704, 2704, 2737, 2715, 2715, 2715, 2715, 2715,
     2715, 2715, 2715, 2715, 2715, 2737, 2726, 2726, 2726, 2726,
     2726, 2726, 2726, 2726, 2726, 2726,    0, 2737, 2737, 2737,
     2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737,
     2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737,
     2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737,
     2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737,
     2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737,
     2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737,

     2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737,
     2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737,
     2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737,
     2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737,
     2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737,
     2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737,
     2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737,
     2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737,
     2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737,
     2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737,

     2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737,
     2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737,
     2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737,
     2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737,
     2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737,
     2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737,
     2737, 2737, 2737, 2737, 2737
    } ;

static const flex_int16_t yy_nxt[6159] =
    {   0,
     2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737,
        5,    6,  567,  568,   76,    7,    5,    6,  566,  569,
      566,    7,   20,   18,  575,  576,  577,  578,  579,   21,
       22,  580,   76,  578,   23,   40,  581,   20,   41,   42,
      578,   42,   42,   42,   43,   44,   42,   42,   42,   45,
       42,   40,   18,   20,   41,   47,  587,   47,   47,   47,
       48,   49,   47,   47,   47,   50,   47,   40,  588,   20,
       41,   55,  589,   55,   55,   55,   56,   57,   55,   55,
       55,   58,   55,   40,  590,   20,   41,   66,  591,   66,
       66,   66,   67,   68,   66,   66,   66,   69,   66,   40,

      592,   20,   41,   79,   76,   79,   79,   79,   80,   81,
       79,   79,   79,   82,   79,   90,  590,   91,  593,  590,
       18,  599,  600,  601,   92,   93,  602,  603,  604,   94,
       40,   76,   20,   41,   96,  602,   96,   96,   96,   97,
       98,   96,   96,   96,   99,   96,   40,  605,   20,   41,
      111,  602,  111,  111,  111,  112,  113,  111,  111,  111,
      114,  111,   40,   18,   20,   41,  126,  611,  126,  126,
      126,  127,  128,  126,  126,  126,  129,  126,   40,  612,
       20,   41,  139,  613,  139,  139,  139,  140,  141,  139,
      139,  139,  142,  139,   40,  614,   20,   41,  151,  615,

      151,  151,  151,  152,  153,  151,  151,  151,  154,  151,
       40,  616,   20,   41,  163,   76,  163,  163,  163,  164,
      165,  163,  163,  163,  166,  163,   40,  614,   20,   41,
      175,  617,  175,  175,  175,  176,  177,  175,  175,  175,
      178,  175,   40,  614,   20,   41,  187,   18,  187,  187,
      187,  188,  189,  187,  187,  187,  190,  187,   40,  623,
       20,   41,  199,  624,  199,  199,  199,  200,  201,  199,
      199,  199,  202,  199,   40,  625,   20,   41,  211,  626,
      211,  211,  211,  212,  213,  211,  211,  211,  214,  211,
       40,  627,   20,   41,  223,  628,  223,  223,  223,  224,

      225,  223,  223,  223,  226,  223,   40,   76,   20,   41,
      235,  626,  235,  235,  235,  236,  237,  235,  235,  235,
      238,  235,   40,  629,   20,   41,  247,  626,  247,  247,
      247,  248,  249,  247,  247,  247,  250,  247,   40,   18,
       20,   41,  259,  635,  259,  259,  259,  260,  261,  259,
      259,  259,  262,  259,   40,  636,   20,   41,  271,  637,
      271,  271,  271,  272,  273,  271,  271,  271,  274,  271,
       40,  638,   20,   41,  283,  639,  283,  283,  283,  284,
      285,  283,  283,  283,  286,  283,   40,  640,   20,   41,
      295,   76,  295,  295,  295,  296,  297,  295,  295,  295,

      298,  295,   40,  638,   20,   41,  307,  641,  307,  307,
      307,  308,  309,  307,  307,  307,  310,  307,   40,  638,
       20,   41,  319,   18,  319,  319,  319,  320,  321,  319,
      319,  319,  322,  319,   40,  647,   20,   41,  331,  648,
      331,  331,  331,  332,  333,  331,  331,  331,  334,  331,
       40,  649,   20,   41,  343,  650,  343,  343,  343,  344,
      345,  343,  343,  343,  346,  343,   40,  651,   20,   41,
      355,  652,  355,  355,  355,  356,  357,  355,  355,  355,
      358,  355,   40,   76,   20,   41,  367,  650,  367,  367,
      367,  368,  369,  367,  367,  367,  370,  367,   40,  653,

       20,   41,  379,  650,  379,  379,  379,  380,  381,  379,
      379,  379,  382,  379,   40,   18,   20,   41,  391,  659,
      391,  391,  391,  392,  393,  391,  391,  391,  394,  391,
       40,  660,   20,   41,  403,  661,  403,  403,  403,  404,
      405,  403,  403,  403,  406,  403,   40,  662,   20,   41,
      415,  663,  415,  415,  415,  416,  417,  415,  415,  415,
      418,  415,   40,  664,   20,   41,  427,   76,  427,  427,
      427,  428,  429,  427,  427,  427,  430,  427,   40,  662,
       20,   41,  439,  665,  439,  439,  439,  440,  441,  439,
      439,  439,  442,  439,   40,  662,   20,   41,  451,   18,

      451,  451,  451,  452,  453,  451,  451,  451,  454,  451,
       40,  671,   20,   41,  463,  672,  463,  463,  463,  464,
      465,  463,  463,  463,  466,  463,   40,  673,   20,   41,
      475,  674,  475,  475,  475,  476,  477,  475,  475,  475,
      478,  475,   40,  675,   20,   41,  487,  676,  487,  487,
      487,  488,  489,  487,  487,  487,  490,  487,   40,   76,
       20,   41,  499,  674,  499,  499,  499,  500,  501,  499,
      499,  499,  502,  499,   40,  677,   20,   41,  511,  674,
      511,  511,  511,  512,  513,  511,  511,  511,  514,  511,
       40,   18,   20,   41,  523,  683,  523,  523,  523,  524,

      525,  523,  523,  523,  526,  523,   40,  684,   20,   41,
      535,  685,  535,  535,  535,  536,  537,  535,  535,  535,
      538,  535,   40,  686,   20,   41,  547,  687,  547,  547,
      547,  548,  549,  547,  547,  547,  550,  547,   40,  688,
       20,   41,  559,   76,  559,  559,  559,  560,  561,  559,
      559,  559,  562,  559,   40,  686,   20,   41,  571,  689,
      571,  571,  571,  572,  573,  571,  571,  571,  574,  571,
       40,  686,   20,   41,  583,   18,  583,  583,  583,  584,
      585,  583,  583,  583,  586,  583,   40,  695,   20,   41,
      595,  696,  595,  595,  595,  596,  597,  595,  595,  595,

      598,  595,   40,  697,   20,   41,  607,  698,  607,  607,
      607,  608,  609,  607,  607,  607,  610,  607,   40,  699,
       20,   41,  619,  700,  619,  619,  619,  620,  621,  619,
      619,  619,  622,  619,   40,   76,   20,   41,  631,  698,
      631,  631,  631,  632,  633,  631,  631,  631,  634,  631,
       40,  701,   20,   41,  643,  698,  643,  643,  643,  644,
      645,  643,  643,  643,  646,  643,   40,   18,   20,   41,
      655,  707,  655,  655,  655,  656,  657,  655,  655,  655,
      658,  655,   40,  708,   20,   41,  667,  709,  667,  667,
      667,  668,  669,  667,  667,  667,  670,  667,   40,  710,

       20,   41,  679,  711,  679,  679,  679,  680,  681,  679,
      679,  679,  682,  679,   40,  712,   20,   41,  691,   76,
      691,  691,  691,  692,  693,  691,  691,  691,  694,  691,
       40,  710,   20,   41,  703,  713,  703,  703,  703,  704,
      705,  703,  703,  703,  706,  703,  710,   18,   40,  719,
       20,   41,  715,  720,  715,  715,  715,  716,  717,  715,
      715,  715,  718,  715,  721,  722,  723,  724,   76,  722,
      725,  722,   18,   40,  731,   20,   41,  727,  732,  727,
      727,  727,  728,  729,  727,  727,  727,  730,  727,  733,
      734,  735,  736,   76,  734,  737,  734,   18,   40,  743,

       20,   41,  739,  744,  739,  739,  739,  740,  741,  739,
      739,  739,  742,  739,  745,  746,  747,  748,   76,  746,
      749,  746,   18,   40,  755,   20,   41,  751,  756,  751,
      751,  751,  752,  753,  751,  751,  751,  754,  751,  757,
      758,  759,  760,   76,  758,  761,  758,   18,   40,  767,
       20,   41,  763,  768,  763,  763,  763,  764,  765,  763,
      763,  763,  766,  763,  769,  770,  771,  772,   76,  770,
      773,  770,   18,   40,  779,   20,   41,  775,  780,  775,
      775,  775,  776,  777,  775,  775,  775,  778,  775,  781,
      782,  783,  784,   76,  782,  785,  782,   18,   40,  791,

       20,   41,  787,  792,  787,  787,  787,  788,  789,  787,
      787,  787,  790,  787,  793,  794,  795,  796,   76,  794,
      797,  794,   18,   40,  803,   20,   41,  799,  804,  799,
      799,  799,  800,  801,  799,  799,  799,  802,  799,  805,
      806,  807,  808,   76,  806,  809,  806,   18,   40,  815,
       20,   41,  811,  816,  811,  811,  811,  812,  813,  811,
      811,  811,  814,  811,  817,  818,  819,  820,   76,  818,
      821,  818,   18,   40,  827,   20,   41,  823,  828,  823,
      823,  823,  824,  825,  823,  823,  823,  826,  823,  829,
      830,  831,  832,   76,  830,  833,  830,   18,   40,  839,

       20,   41,  835,  840,  835,  835,  835,  836,  837,  835,
      835,  835,  838,  835,  841,  842,  843,  844,   76,  842,
      845,  842,   18,   40,  851,   20,   41,  847,  852,  847,
      847,  847,  848,  849,  847,  847,  847,  850,  847,  853,
      854,  855,  856,   76,  854,  857,  854,   18,   40,  863,
       20,   41,  859,  864,  859,  859,  859,  860,  861,  859,
      859,  859,  862,  859,  865,  866,  867,  868,   76,  866,
      869,  866,   18,   40,  875,   20,   41,  871,  876,  871,
      871,  871,  872,  873,  871,  871,  871,  874,  871,  877,
      878,  879,  880,   76,  878,  881,  878,   18,   40,  887,

       20,   41,  883,  888,  883,  883,  883,  884,  885,  883,
      883,  883,  886,  883,  889,  890,  891,  892,   76,  890,
      893,  890,   18,   40,  899,   20,   41,  895,  900,  895,
      895,  895,  896,  897,  895,  895,  895,  898,  895,  901,
      902,  903,  904,   76,  902,  905,  902,   18,   40,  911,
       20,   41,  907,  912,  907,  907,  907,  908,  909,  907,
      907,  907,  910,  907,  913,  914,  915,  916,   76,  914,
      917,  914,   18,   40,  923,   20,   41,  919,  924,  919,
      919,  919,  920,  921,  919,  919,  919,  922,  919,  925,
      926,  927,  928,   76,  926,  929,  926,   18,   40,  935,

       20,   41,  931,  936,  931,  931,  931,  932,  933,  931,
      931,  931,  934,  931,  937,  938,  939,  940,   76,  938,
      941,  938,   18,   40,  947,   20,   41,  943,  948,  943,
      943,  943,  944,  945,  943,  943,  943,  946,  943,  949,
      950,  951,  952,   76,  950,  953,  950,   18,   40,  959,
       20,   41,  955,  960,  955,  955,  955,  956,  957,  955,
      955,  955,  958,  955,  961,  962,  963,  964,   76,  962,
      965,  962,   18,   40,  971,   20,   41,  967,  972,  967,
      967,  967,  968,  969,  967,  967,  967,  970,  967,  973,
      974,  975,  976,   76,  974,  977,  974,   18,   40,  983,

       20,   41,  979,  984,  979,  979,  979,  980,  981,  979,
      979,  979,  982,  979,  985,  986,  987,  988,   76,  986,
      989,  986,   18,   40,  995,   20,   41,  991,  996,  991,
      991,  991,  992,  993,  991,  991,  991,  994,  991,  997,
      998,  999, 1000,   76,  998, 1001,  998,   18,   40, 1007,
       20,   41, 1003, 1008, 1003, 1003, 1003, 1004, 1005, 1003,
     1003, 1003, 1006, 1003, 1009, 1010, 1011, 1012,   76, 1010,
     1013, 1010,   18,   40, 1019,   20,   41, 1015, 1020, 1015,
     1015, 1015, 1016, 1017, 1015, 1015, 1015, 1018, 1015, 1021,
     1022, 1023, 1024,   76, 1022, 1025, 1022,   18,   40, 1031,

       20,   41, 1027, 1032, 1027, 1027, 1027, 1028, 1029, 1027,
     1027, 1027, 1030, 1027, 1033, 1034, 1035, 1036,   76, 1034,
     1037, 1034,   18,   40, 1043,   20,   41, 1039, 1044, 1039,
     1039, 1039, 1040, 1041, 1039, 1039, 1039, 1042, 1039, 1045,
     1046, 1047, 1048,   76, 1046, 1049, 1046,   18,   40, 1055,
       20,   41, 1051, 1056, 1051, 1051, 1051, 1052, 1053, 1051,
     1051, 1051, 1054, 1051, 1057, 1058, 1059, 1060,   76, 1058,
     1061, 1058,   18,   40, 1067,   20,   41, 1063, 1068, 1063,
     1063, 1063, 1064, 1065, 1063, 1063, 1063, 1066, 1063, 1069,
     1070, 1071, 1072,   76, 1070, 1073, 1070,   18,   40, 1079,

       20,   41, 1075, 1080, 1075, 1075, 1075, 1076, 1077, 1075,
     1075, 1075, 1078, 1075, 1081, 1082, 1083, 1084,   76, 1082,
     1085, 1082,   18,   40, 1091,   20,   41, 1087, 1092, 1087,
     1087, 1087, 1088, 1089, 1087, 1087, 1087, 1090, 1087, 1093,
     1094, 1095, 1096,   76, 1094, 1097, 1094,   18,   40, 1103,
       20,   41, 1099, 1104, 1099, 1099, 1099, 1100, 1101, 1099,
     1099, 1099, 1102, 1099, 1105, 1106, 1107, 1108,   76, 1106,
     1109, 1106,   18,   40, 1115,   20,   41, 1111, 1116, 1111,
     1111, 1111, 1112, 1113, 1111, 1111, 1111, 1114, 1111, 1117,
     1118, 1119, 1120,   76, 1118, 1121, 1118,   18,   40, 1127,

       20,   41, 1123, 1128, 1123, 1123, 1123, 1124, 1125, 1123,
     1123, 1123, 1126, 1123, 1129, 1130, 1131, 1132,   76, 1130,
     1133, 1130,   18,   40, 1139,   20,   41, 1135, 1140, 1135,
     1135, 1135, 1136, 1137, 1135, 1135, 1135, 1138, 1135, 1141,
     1142, 1143, 1144,   76, 1142, 1145, 1142,   18,   40, 1151,
       20,   41, 1147, 1152, 1147, 1147, 1147, 1148, 1149, 1147,
     1147, 1147, 1150, 1147, 1153, 1154, 1155, 1156,   76, 1154,
     1157, 1154,   18,   40, 1163,   20,   41, 1159, 1164, 1159,
     1159, 1159, 1160, 1161, 1159, 1159, 1159, 1162, 1159, 1165,
     1166, 1167, 1168,   76, 1166, 1169, 1166,   18,   40, 1175,

       20,   41, 1171, 1176, 1171, 1171, 1171, 1172, 1173, 1171,
     1171, 1171, 1174, 1171, 1177, 1178, 1179, 1180,   76, 1178,
     1181, 1178,   18,   40, 1187,   20,   41, 1183, 1188, 1183,
     1183, 1183, 1184, 1185, 1183, 1183, 1183, 1186, 1183, 1189,
     1190, 1191, 1192,   76, 1190, 1193, 1190,   18,   40, 1199,
       20,   41, 1195, 1200, 1195, 1195, 1195, 1196, 1197, 1195,
     1195, 1195, 1198, 1195, 1201, 1202, 1203, 1204,   76, 1202,
     1205, 1202,   18,   40, 1211,   20,   41, 1207, 1212, 1207,
     1207, 1207, 1208, 1209, 1207, 1207, 1207, 1210, 1207, 1213,
     1214, 1215, 1216,   76, 1214, 1217, 1214,   18,   40, 1223,

       20,   41, 1219, 1224, 1219, 1219, 1219, 1220, 1221, 1219,
     1219, 1219, 1222, 1219, 1225, 1226, 1227, 1228,   76, 1226,
     1229, 1226,   18,   40, 1235,   20,   41, 1231, 1236, 1231,
     1231, 1231, 1232, 1233, 1231, 1231, 1231, 1234, 1231, 1237,
     1238, 1239, 1240,   76, 1238, 1241, 1238,   18,   40, 1247,
       20,   41, 1243, 1248, 1243, 1243, 1243, 1244, 1245, 1243,
     1243, 1243, 1246, 1243, 1249, 1250, 1251, 1252,   76, 1250,
     1253, 1250,   18,   40, 1259,   20,   41, 1255, 1260, 1255,
     1255, 1255, 1256, 1257, 1255, 1255, 1255, 1258, 1255, 1261,
     1262, 1263, 1264,   76, 1262, 1265, 1262,   18,   40, 1271,

       20,   41, 1267, 1272, 1267, 1267, 1267, 1268, 1269, 1267,
     1267, 1267, 1270, 1267, 1273, 1274, 1275, 1276,   76, 1274,
     1277, 1274,   18,   40, 1283,   20,   41, 1279, 1284, 1279,
     1279, 1279, 1280, 1281, 1279, 1279, 1279, 1282, 1279, 1285,
     1286, 1287, 1288,   76, 1286, 1289, 1286,   18,   40, 1295,
       20,   41, 1291, 1296, 1291, 1291, 1291, 1292, 1293, 1291,
     1291, 1291, 1294, 1291, 1297, 1298, 1299, 1300,   76, 1298,
     1301, 1298,   18,   40, 1307,   20,   41, 1303, 1308, 1303,
     1303, 1303, 1304, 1305, 1303, 1303, 1303, 1306, 1303, 1309,
     1310, 1311, 1312,   76, 1310, 1313, 1310,   18,   40, 1319,

       20,   41, 1315, 1320, 1315, 1315, 1315, 1316, 1317, 1315,
     1315, 1315, 1318, 1315, 1321, 1322, 1323, 1324,   76, 1322,
     1325, 1322,   18,   40, 1331,   20,   41, 1327, 1332, 1327,
     1327, 1327, 1328, 1329, 1327, 1327, 1327, 1330, 1327, 1333,
     1334, 1335, 1336,   76, 1334, 1337, 1334,   18,   40, 1343,
       20,   41, 1339, 1344, 1339, 1339, 1339, 1340, 1341, 1339,
     1339, 1339, 1342, 1339, 1345, 1346, 1347, 1348,   76, 1346,
     1349, 1346,   18,   40, 1355,   20,   41, 1351, 1356, 1351,
     1351, 1351, 1352, 1353, 1351, 1351, 1351, 1354, 1351, 1357,
     1358, 1359, 1360,   76, 1358, 1361, 1358,   18,   40, 1367,

       20,   41, 1363, 1368, 1363, 1363, 1363, 1364, 1365, 1363,
     1363, 1363, 1366, 1363, 1369, 1370, 1371, 1372,   76, 1370,
     1373, 1370,   18,   40, 1379,   20,   41, 1375, 1380, 1375,
     1375, 1375, 1376, 1377, 1375, 1375, 1375, 1378, 1375, 1381,
     1382, 1383, 1384,   76, 1382, 1385, 1382,   18,   40, 1391,
       20,   41, 1387, 1392, 1387, 1387, 1387, 1388, 1389, 1387,
     1387, 1387, 1390, 1387, 1393, 1394, 1395, 1396,   76, 1394,
     1397, 1394,   18,   40, 1403,   20,   41, 1399, 1404, 1399,
     1399, 1399, 1400, 1401, 1399, 1399, 1399, 1402, 1399, 1405,
     1406, 1407, 1408,   76, 1406, 1409, 1406,   18,   40, 1415,

       20,   41, 1411, 1416, 1411, 1411, 1411, 1412, 1413, 1411,
     1411, 1411, 1414, 1411, 1417, 1418, 1419, 1420,   76, 1418,
     1421, 1418,   18,   40, 1427,   20,   41, 1423, 1428, 1423,
     1423, 1423, 1424, 1425, 1423, 1423, 1423, 1426, 1423, 1429,
     1430, 1431, 1432,   76, 1430, 1433, 1430,   18,   40, 1439,
       20,   41, 1435, 1440, 1435, 1435, 1435, 1436, 1437, 1435,
     1435, 1435, 1438, 1435, 1441, 1442, 1443, 1444,   76, 1442,
     1445, 1442,   18,   40, 1451,   20,   41, 1447, 1452, 1447,
     1447, 1447, 1448, 1449, 1447, 1447, 1447, 1450, 1447, 1453,
     1454, 1455, 1456,   76, 1454, 1457, 1454,   18,   40, 1463,

       20,   41, 1459, 1464, 1459, 1459, 1459, 1460, 1461, 1459,
     1459, 1459, 1462, 1459, 1465, 1466, 1467, 1468,   76, 1466,
     1469, 1466,   18,   40, 1475,   20,   41, 1471, 1476, 1471,
     1471, 1471, 1472, 1473, 1471, 1471, 1471, 1474, 1471, 1477,
     1478, 1479, 1480,   76, 1478, 1481, 1478,   18,   40, 1487,
       20,   41, 1483, 1488, 1483, 1483, 1483, 1484, 1485, 1483,
     1483, 1483, 1486, 1483, 1489, 1490, 1491, 1492,   76, 1490,
     1493, 1490,   18,   40, 1499,   20,   41, 1495, 1500, 1495,
     1495, 1495, 1496, 1497, 1495, 1495, 1495, 1498, 1495, 1501,
     1502, 1503, 1504,   76, 1502, 1505, 1502,   18,   40, 1511,

       20,   41, 1507, 1512, 1507, 1507, 1507, 1508, 1509, 1507,
     1507, 1507, 1510, 1507, 1513, 1514, 1515, 1516,   76, 1514,
     1517, 1514,   18,   40, 1523,   20,   41, 1519, 1524, 1519,
     1519, 1519, 1520, 1521, 1519, 1519, 1519, 1522, 1519, 1525,
     1526, 1527, 1528,   76, 1526, 1529, 1526,   18,   40, 1535,
       20,   41, 1531, 1536, 1531, 1531, 1531, 1532, 1533, 1531,
     1531, 1531, 1534, 1531, 1537, 1538, 1539, 1540,   76, 1538,
     1541, 1538,   18,   40, 1547,   20,   41, 1543, 1548, 1543,
     1543, 1543, 1544, 1545, 1543, 1543, 1543, 1546, 1543, 1549,
     1550, 1551, 1552,   76, 1550, 1553, 1550,   18,   40, 1559,

       20,   41, 1555, 1560, 1555, 1555, 1555, 1556, 1557, 1555,
     1555, 1555, 1558, 1555, 1561, 1562, 1563, 1564,   76, 1562,
     1565, 1562,   18,   40, 1571,   20,   41, 1567, 1572, 1567,
     1567, 1567, 1568, 1569, 1567, 1567, 1567, 1570, 1567, 1573,
     1574, 1575, 1576,   76, 1574, 1577, 1574,   18,   40, 1583,
       20,   41, 1579, 1584, 1579, 1579, 1579, 1580, 1581, 1579,
     1579, 1579, 1582, 1579, 1585, 1586, 1587, 1588,   76, 1586,
     1589, 1586,   18,   40, 1595,   20,   41, 1591, 1596, 1591,
     1591, 1591, 1592, 1593, 1591, 1591, 1591, 1594, 1591, 1597,
     1598, 1599, 1600,   76, 1598, 1601, 1598,   18,   40, 1607,

       20,   41, 1603, 1608, 1603, 1603, 1603, 1604, 1605, 1603,
     1603, 1603, 1606, 1603, 1609, 1610, 1611, 1612,   76, 1610,
     1613, 1610,   18,   40, 1619,   20,   41, 1615, 1620, 1615,
     1615, 1615, 1616, 1617, 1615, 1615, 1615, 1618, 1615, 1621,
     1622, 1623, 1624,   76, 1622, 1625, 1622,   18,   40, 1631,
       20,   41, 1627, 1632, 1627, 1627, 1627, 1628, 1629, 1627,
     1627, 1627, 1630, 1627, 1633, 1634, 1635, 1636,   76, 1634,
     1637, 1634,   18,   40, 1643,   20,   41, 1639, 1644, 1639,
     1639, 1639, 1640, 1641, 1639, 1639, 1639, 1642, 1639, 1645,
     1646, 1647, 1648,   76, 1646, 1649, 1646,   18,   40, 1655,

       20,   41, 1651, 1656, 1651, 1651, 1651, 1652, 1653, 1651,
     1651, 1651, 1654, 1651, 1657, 1658, 1659, 1660,   76, 1658,
     1661, 1658,   18,   40, 1667,   20,   41, 1663, 1668, 1663,
     1663, 1663, 1664, 1665, 1663, 1663, 1663, 1666, 1663, 1669,
     1670, 1671, 1672,   76, 1670, 1673, 1670,   18,   40, 1679,
       20,   41, 1675, 1680, 1675, 1675, 1675, 1676, 1677, 1675,
     1675, 1675, 1678, 1675, 1681, 1682, 1683, 1684,   76, 1682,
     1685, 1682,   18,   40, 1691,   20,   41, 1687, 1692, 1687,
     1687, 1687, 1688, 1689, 1687, 1687, 1687, 1690, 1687, 1693,
     1694, 1695, 1696,   76, 1694, 1697, 1694,   18,   40, 1703,

       20,   41, 1699, 1704, 1699, 1699, 1699, 1700, 1701, 1699,
     1699, 1699, 1702, 1699, 1705, 1706, 1707, 1708,   76, 1706,
     1709, 1706,   18,   40, 1715,   20,   41, 1711, 1716, 1711,
     1711, 1711, 1712, 1713, 1711, 1711, 1711, 1714, 1711, 1717,
     1718, 1719, 1720,   76, 1718, 1721, 1718,   18,   40, 1727,
       20,   41, 1723, 1728, 1723, 1723, 1723, 1724, 1725, 1723,
     1723, 1723, 1726, 1723, 1729, 1730, 1731, 1732,   76, 1730,
     1733, 1730,   18,   40, 1739,   20,   41, 1735, 1740, 1735,
     1735, 1735, 1736, 1737, 1735, 1735, 1735, 1738, 1735, 1741,
     1742, 1743, 1744,   76, 1742, 1745, 1742,   18,   40, 1751,

       20,   41, 1747, 1752, 1747, 1747, 1747, 1748, 1749, 1747,
     1747, 1747, 1750, 1747, 1753, 1754, 1755, 1756,   76, 1754,
     1757, 1754,   18,   40, 1763,   20,   41, 1759, 1764, 1759,
     1759, 1759, 1760, 1761, 1759, 1759, 1759, 1762, 1759, 1765,
     1766, 1767, 1768,   76, 1766, 1769, 1766,   18,   40, 1775,
       20,   41, 1771, 1776, 1771, 1771, 1771, 1772, 1773, 1771,
     1771, 1771, 1774, 1771, 1777, 1778, 1779, 1780,   76, 1778,
     1781, 1778,   18,   40, 1787,   20,   41, 1783, 1788, 1783,
     1783, 1783, 1784, 1785, 1783, 1783, 1783, 1786, 1783, 1789,
     1790, 1791, 1792,   76, 1790, 1793, 1790,   18,   40, 1799,

       20,   41, 1795, 1800, 1795, 1795, 1795, 1796, 1797, 1795,
     1795, 1795, 1798, 1795, 1801, 1802, 1803, 1804,   76, 1802,
     1805, 1802,   18,   40, 1811,   20,   41, 1807, 1812, 1807,
     1807, 1807, 1808, 1809, 1807, 1807, 1807, 1810, 1807, 1813,
     1814, 1815, 1816,   76, 1814, 1817, 1814,   18,   40, 1823,
       20,   41, 1819, 1824, 1819, 1819, 1819, 1820, 1821, 1819,
     1819, 1819, 1822, 1819, 1825, 1826, 1827, 1828,   76, 1826,
     1829, 1826,   18,   40, 1835,   20,   41, 1831, 1836, 1831,
     1831, 1831, 1832, 1833, 1831, 1831, 1831, 1834, 1831, 1837,
     1838, 1839, 1840,   76, 1838, 1841, 1838,   18,   40, 1847,

       20,   41, 1843, 1848, 1843, 1843, 1843, 1844, 1845, 1843,
     1843, 1843, 1846, 1843, 1849, 1850, 1851, 1852,   76, 1850,
     1853, 1850,   18,   40, 1859,   20,   41, 1855, 1860, 1855,
     1855, 1855, 1856, 1857, 1855, 1855, 1855, 1858, 1855, 1861,
     1862, 1863, 1864,   76, 1862, 1865, 1862,   18,   40, 1871,
       20,   41, 1867, 1872, 1867, 1867, 1867, 1868, 1869, 1867,
     1867, 1867, 1870, 1867, 1873, 1874, 1875, 1876,   76, 1874,
     1877, 1874,   18,   40, 1883,   20,   41, 1879, 1884, 1879,
     1879, 1879, 1880, 1881, 1879, 1879, 1879, 1882, 1879, 1885,
     1886, 1887, 1888,   76, 1886, 1889, 1886,   18,   40, 1895,

       20,   41, 1891, 1896, 1891, 1891, 1891, 1892, 1893, 1891,
     1891, 1891, 1894, 1891, 1897, 1898, 1899, 1900,   76, 1898,
     1901, 1898,   18,   40, 1907,   20,   41, 1903, 1908, 1903,
     1903, 1903, 1904, 1905, 1903, 1903, 1903, 1906, 1903, 1909,
     1910, 1911, 1912,   76, 1910, 1913, 1910,   18,   40, 1919,
       20,   41, 1915, 1920, 1915, 1915, 1915, 1916, 1917, 1915,
     1915, 1915, 1918, 1915, 1921, 1922, 1923, 1924,   76, 1922,
     1925, 1922,   18,   40, 1931,   20,   41, 1927, 1932, 1927,
     1927, 1927, 1928, 1929, 1927, 1927, 1927, 1930, 1927, 1933,
     1934, 1935, 1936,   76, 1934, 1937, 1934,   18,   40, 1943,

       20,   41, 1939, 1944, 1939, 1939, 1939, 1940, 1941, 1939,
     1939, 1939, 1942, 1939, 1945, 1946, 1947, 1948,   76, 1946,
     1949, 1946,   18,   40, 1955,   20,   41, 1951, 1956, 1951,
     1951, 1951, 1952, 1953, 1951, 1951, 1951, 1954, 1951, 1957,
     1958, 1959, 1960,   76, 1958, 1961, 1958,   18,   40, 1967,
       20,   41, 1963, 1968, 1963, 1963, 1963, 1964, 1965, 1963,
     1963, 1963, 1966, 1963, 1969, 1970, 1971, 1972,   76, 1970,
     1973, 1970,   18,   40, 1979,   20,   41, 1975, 1980, 1975,
     1975, 1975, 1976, 1977, 1975, 1975, 1975, 1978, 1975, 1981,
     1982, 1983, 1984,   76, 1982, 1985, 1982,   18,   40, 1991,

       20,   41, 1987, 1992, 1987, 1987, 1987, 1988, 1989, 1987,
     1987, 1987, 1990, 1987, 1993, 1994, 1995, 1996,   76, 1994,
     1997, 1994,   18,   40, 2003,   20,   41, 1999, 2004, 1999,
     1999, 1999, 2000, 2001, 1999, 1999, 1999, 2002, 1999, 2005,
     2006, 2007, 2008,   76, 2006, 2009, 2006,   18,   40, 2015,
       20,   41, 2011, 2016, 2011, 2011, 2011, 2012, 2013, 2011,
     2011, 2011, 2014, 2011, 2017, 2018, 2019, 2020,   76, 2018,
     2021, 2018,   18,   40, 2027,   20,   41, 2023, 2028, 2023,
     2023, 2023, 2024, 2025, 2023, 2023, 2023, 2026, 2023, 2029,
     2030, 2031, 2032,   76, 2030, 2033, 2030,   18,   40, 2039,

       20,   41, 2035, 2040, 2035, 2035, 2035, 2036, 2037, 2035,
     2035, 2035, 2038, 2035, 2041, 2042, 2043, 2044,   76, 2042,
     2045, 2042,   18,   40, 2051,   20,   41, 2047, 2052, 2047,
     2047, 2047, 2048, 2049, 2047, 2047, 2047, 2050, 2047, 2053,
     2054, 2055, 2056,   76, 2054, 2057, 2054,   18,   40, 2063,
       20,   41, 2059, 2064, 2059, 2059, 2059, 2060, 2061, 2059,
     2059, 2059, 2062, 2059, 2065, 2066, 2067, 2068,   76, 2066,
     2069, 2066,   18,   40, 2075,   20,   41, 2071, 2076, 2071,
     2071, 2071, 2072, 2073, 2071, 2071, 2071, 2074, 2071, 2077,
     2078, 2079, 2080,   76, 2078, 2081, 2078,   18,   40, 2087,

       20,   41, 2083, 2088, 2083, 2083, 2083, 2084, 2085, 2083,
     2083, 2083, 2086, 2083, 2089, 2090, 2091, 2092,   76, 2090,
     2093, 2090,   18,   40, 2099,   20,   41, 2095, 2100, 2095,
     2095, 2095, 2096, 2097, 2095, 2095, 2095, 2098, 2095, 2101,
     2102, 2103, 2104,   76, 2102, 2105, 2102,   18,   40, 2111,
       20,   41, 2107, 2112, 2107, 2107, 2107, 2108, 2109, 2107,
     2107, 2107, 2110, 2107, 2113, 2114, 2115, 2116,   76, 2114,
     2117, 2114,   18,   40, 2123,   20,   41, 2119, 2124, 2119,
     2119, 2119, 2120, 2121, 2119, 2119, 2119, 2122, 2119, 2125,
     2126, 2127, 2128,   76, 2126, 2129, 2126,   18,   40, 2135,

       20,   41, 2131, 2136, 2131, 2131, 2131, 2132, 2133, 2131,
     2131, 2131, 2134, 2131, 2137, 2138, 2139, 2140,   76, 2138,
     2141, 2138,   18,   40, 2147,   20,   41, 2143, 2148, 2143,
     2143, 2143, 2144, 2145, 2143, 2143, 2143, 2146, 2143, 2149,
     2150, 2151, 2152,   76, 2150, 2153, 2150,   18,   40, 2159,
       20,   41, 2155, 2160, 2155, 2155, 2155, 2156, 2157, 2155,
     2155, 2155, 2158, 2155, 2161, 2162, 2163, 2164,   76, 2162,
     2165, 2162,   18,   40, 2171,   20,   41, 2167, 2172, 2167,
     2167, 2167, 2168, 2169, 2167, 2167, 2167, 2170, 2167, 2173,
     2174, 2175, 2176,   76, 2174, 2177, 2174,   18,   40, 2183,

       20,   41, 2179, 2184, 2179, 2179, 2179, 2180, 2181, 2179,
     2179, 2179, 2182, 2179, 2185, 2186, 2187, 2188,   76, 2186,
     2189, 2186,   18,   40, 2195,   20,   41, 2191, 2196, 2191,
     2191, 2191, 2192, 2193, 2191, 2191, 2191, 2194, 2191, 2197,
     2198, 2199, 2200,   76, 2198, 2201, 2198,   18,   40, 2207,
       20,   41, 2203, 2208, 2203, 2203, 2203, 2204, 2205, 2203,
     2203, 2203, 2206, 2203, 2209, 2210, 2211, 2212,   76, 2210,
     2213, 2210,   18,   40, 2219,   20,   41, 2215, 2220, 2215,
     2215, 2215, 2216, 2217, 2215, 2215, 2215, 2218, 2215, 2221,
     2222, 2223, 2224,   76, 2222, 2225, 2222,   18,   40, 2231,

       20,   41, 2227, 2232, 2227, 2227, 2227, 2228, 2229, 2227,
     2227, 2227, 2230, 2227, 2233, 2234, 2235, 2236,   76, 2234,
     2237, 2234,   18,   40, 2243,   20,   41, 2239, 2244, 2239,
     2239, 2239, 2240, 2241, 2239, 2239, 2239, 2242, 2239, 2245,
     2246, 2247, 2248,   76, 2246, 2249, 2246,   18,   40, 2255,
       20,   41, 2251, 2256, 2251, 2251, 2251, 2252, 2253, 2251,
     2251, 2251, 2254, 2251, 2257, 2258, 2259, 2260,   76, 2258,
     2261, 2258,   18,   40, 2267,   20,   41, 2263, 2268, 2263,
     2263, 2263, 2264, 2265, 2263, 2263, 2263, 2266, 2263, 2269,
     2270, 2271, 2272,   76, 2270, 2273, 2270,   18,   40, 2279,

       20,   41, 2275, 2280, 2275, 2275, 2275, 2276, 2277, 2275,
     2275, 2275, 2278, 2275, 2281, 2282, 2283, 2284,   76, 2282,
     2285, 2282,   18,   40, 2291,   20,   41, 2287, 2292, 2287,
     2287, 2287, 2288, 2289, 2287, 2287, 2287, 2290, 2287, 2293,
     2294, 2295, 2296,   76, 2294, 2297, 2294,   18,   40, 2303,
       20,   41, 2299, 2304, 2299, 2299, 2299, 2300, 2301, 2299,
     2299, 2299, 2302, 2299, 2305, 2306, 2307, 2308,   76, 2306,
     2309, 2306,   18,   40, 2315,   20,   41, 2311, 2316, 2311,
     2311, 2311, 2312, 2313, 2311, 2311, 2311, 2314, 2311, 2317,
     2318, 2319, 2320,   76, 2318, 2321, 2318,   18,   40, 2327,

       20,   41, 2323, 2328, 2323, 2323, 2323, 2324, 2325, 2323,
     2323, 2323, 2326, 2323, 2329, 2330, 2331, 2332,   76, 2330,
     2333, 2330,   18,   40, 2339,   20,   41, 2335, 2340, 2335,
     2335, 2335, 2336, 2337, 2335, 2335, 2335, 2338, 2335, 2341,
     2342, 2343, 2344,   76, 2342, 2345, 2342,   18,   40, 2351,
       20,   41, 2347, 2352, 2347, 2347, 2347, 2348, 2349, 2347,
     2347, 2347, 2350, 2347, 2353, 2354, 2355, 2356,   76, 2354,
     2357, 2354,   18,   40, 2363,   20,   41, 2359, 2364, 2359,
     2359, 2359, 2360, 2361, 2359, 2359, 2359, 2362, 2359, 2365,
     2366, 2367, 2368,   76, 2366, 2369, 2366,   18,   40, 2375,

       20,   41, 2371, 2376, 2371, 2371, 2371, 2372, 2373, 2371,
     2371, 2371, 2374, 2371, 2377, 2378, 2379, 2380,   76, 2378,
     2381, 2378,   18,   40, 2387,   20,   41, 2383, 2388, 2383,
     2383, 2383, 2384, 2385, 2383, 2383, 2383, 2386, 2383, 2389,
     2390, 2391, 2392,   76, 2390, 2393, 2390,   18,   40, 2399,
       20,   41, 2395, 2400, 2395, 2395, 2395, 2396, 2397, 2395,
     2395, 2395, 2398, 2395, 2401, 2402, 2403, 2404,   76, 2402,
     2405, 2402,   18,   40, 2411,   20,   41, 2407, 2412, 2407,
     2407, 2407, 2408, 2409, 2407, 2407, 2407, 2410, 2407, 2413,
     2414, 2415, 2416,   76, 2414, 2417, 2414,   18,   40, 2423,

       20,   41, 2419, 2424, 2419, 2419, 2419, 2420, 2421, 2419,
     2419, 2419, 2422, 2419, 2425, 2426, 2427, 2428,   76, 2426,
     2429, 2426,   18,   40, 2435,   20,   41, 2431, 2436, 2431,
     2431, 2431, 2432, 2433, 2431, 2431, 2431, 2434, 2431, 2437,
     2438, 2439, 2440,   76, 2438, 2441, 2438,   18,   40, 2447,
       20,   41, 2443, 2448, 2443, 2443, 2443, 2444, 2445, 2443,
     2443, 2443, 2446, 2443, 2449, 2450, 2451, 2452,   76, 2450,
     2453, 2450,   18,   40, 2459,   20,   41, 2455, 2460, 2455,
     2455, 2455, 2456, 2457, 2455, 2455, 2455, 2458, 2455, 2461,
     2462, 2463, 2464,   76, 2462, 2465, 2462,   18,   40, 2471,

       20,   41, 2467, 2472, 2467, 2467, 2467, 2468, 2469, 2467,
     2467, 2467, 2470, 2467, 2473, 2474, 2475, 2476,   76, 2474,
     2477, 2474,   18,   40, 2483,   20,   41, 2479, 2484, 2479,
     2479, 2479, 2480, 2481, 2479, 2479, 2479, 2482, 2479, 2485,
     2486, 2487, 2488,   76, 2486, 2489, 2486,   18,   40, 2495,
       20,   41, 2491, 2496, 2491, 2491, 2491, 2492, 2493, 2491,
     2491, 2491, 2494, 2491, 2497, 2498, 2499, 2500,   76, 2498,
     2501, 2498,   18,   40, 2507,   20,   41, 2503, 2508, 2503,
     2503, 2503, 2504, 2505, 2503, 2503, 2503, 2506, 2503, 2509,
     2510, 2511, 2512,   76, 2510, 2513, 2510,   18,   40, 2519,

       20,   41, 2515, 2520, 2515, 2515, 2515, 2516, 2517, 2515,
     2515, 2515, 2518, 2515, 2521, 2522, 2523, 2524,   76, 2522,
     2525, 2522,   18,   40, 2531,   20,   41, 2527, 2532, 2527,
     2527, 2527, 2528, 2529, 2527, 2527, 2527, 2530, 2527, 2533,
     2534, 2535, 2536,   76, 2534, 2537, 2534,   18,   40, 2543,
       20,   41, 2539, 2544, 2539, 2539, 2539, 2540, 2541, 2539,
     2539, 2539, 2542, 2539, 2545, 2546, 2547, 2548,   76, 2546,
     2549, 2546,   18,   40, 2555,   20,   41, 2551, 2556, 2551,
     2551, 2551, 2552, 2553, 2551, 2551, 2551, 2554, 2551, 2557,
     2558, 2559, 2560,   76, 2558, 2561, 2558,   18,   40, 2567,

       20,   41, 2563, 2568, 2563, 2563, 2563, 2564, 2565, 2563,
     2563, 2563, 2566, 2563, 2569, 2570, 2571, 2572,   76, 2570,
     2573, 2570,   18,   40, 2579,   20,   41, 2575, 2580, 2575,
     2575, 2575, 2576, 2577, 2575, 2575, 2575, 2578, 2575, 2581,
     2582, 2583, 2584,   76, 2582, 2585, 2582,   18,   40, 2591,
       20,   41, 2587, 2592, 2587, 2587, 2587, 2588, 2589, 2587,
     2587, 2587, 2590, 2587, 2593, 2594, 2595, 2596,   76, 2594,
     2597, 2594,   18,   40, 2603,   20,   41, 2599, 2604, 2599,
     2599, 2599, 2600, 2601, 2599, 2599, 2599, 2602, 2599, 2605,
     2606, 2607, 2608,   76, 2606, 2609, 2606,   18,   40, 2615,

       20,   41, 2611, 2616, 2611, 2611, 2611, 2612, 2613, 2611,
     2611, 2611, 2614, 2611, 2617, 2618, 2619, 2620,   76, 2618,
     2621, 2618,   18,   40, 2627,   20,   41, 2623, 2628, 2623,
     2623, 2623, 2624, 2625, 2623, 2623, 2623, 2626, 2623, 2629,
     2630, 2631, 2632,   76, 2630, 2633, 2630,   18,   40, 2639,
       20,   41, 2635, 2640, 2635, 2635, 2635, 2636, 2637, 2635,
     2635, 2635, 2638, 2635, 2641, 2642, 2643, 2644,   76, 2642,
     2645, 2642,   18,   40, 2651,   20,   41, 2647, 2652, 2647,
     2647, 2647, 2648, 2649, 2647, 2647, 2647, 2650, 2647, 2653,
     2654, 2655, 2656,   76, 2654, 2657, 2654,   18,   40, 2663,

       20,   41, 2659, 2664, 2659, 2659, 2659, 2660, 2661, 2659,
     2659, 2659, 2662, 2659, 2665, 2666, 2667, 2668,   76, 2666,
     2669, 2666,   18,   40, 2675,   20,   41, 2671, 2676, 2671,
     2671, 2671, 2672, 2673, 2671, 2671, 2671, 2674, 2671, 2677,
     2678, 2679, 2680,   76, 2678, 2681, 2678,   18,   40, 2686,
       20,   41, 2682, 2687, 2682, 2682, 2682, 2683, 2684, 2682,
     2682, 2682, 2685, 2682, 2688, 2689, 2690, 2691,   76, 2689,
     2692, 2689,   40, 2697,   20,   41, 2693, 2698, 2693, 2693,
     2693, 2694, 2695, 2693, 2693, 2693, 2696, 2693, 2699, 2700,
     2701, 2702,   76, 2700, 2703, 2700,   40, 2708,   20,   41,

     2704, 2709, 2704, 2704, 2704, 2705, 2706, 2704, 2704, 2704,
     2707, 2704, 2710, 2711, 2712, 2713,   76, 2711, 2714, 2711,
       40, 2719,   20,   41, 2715, 2720, 2715, 2715, 2715, 2716,
     2717, 2715, 2715, 2715, 2718, 2715, 2721, 2722, 2723, 2724,
       76, 2722, 2725, 2722,   40, 2730,   20,   41, 2726, 2731,
     2726, 2726, 2726, 2727, 2728, 2726, 2726, 2726, 2729, 2726,
     2732, 2733, 2734, 2735,   76, 2733, 2736, 2733,   40,   26,
       20,   41,   27,   28,   30,   31,   32,   21,   22,   76,
       30,   35,   23,   30,    4,    4,    4,   16,   16,   19,
       19,   24,   24,   29,   29,   33,   33,   36,   36,   37,

       37,   39,   39,   46,   46,   54,   54,   65,   65,   78,
       78,   95,   95,  110,  110,  125,  125,  138,  138,  150,
      150,  162,  162,  174,  174,  186,  186,  198,  198,  210,
      210,  222,  222,  234,  234,  246,  246,  258,  258,  270,
      270,  282,  282,  294,  294,  306,  306,  318,  318,  330,
      330,  342,  342,  354,  354,  366,  366,  378,  378,  390,
      390,  402,  402,  414,  414,  426,  426,  438,  438,  450,
      450,  462,  462,  474,  474,  486,  486,  498,  498,  510,
      510,  522,  522,  534,  534,  546,  546,  558,  558,  570,
      570,  582,  582,  594,  594,  606,  606,  618,  618,  630,

      630,  642,  642,  654,  654,  666,  666,  678,  678,  690,
      690,  702,  702,  714,  714,  726,  726,  738,  738,  750,
      750,  762,  762,  774,  774,  786,  786,  798,  798,  810,
      810,  822,  822,  834,  834,  846,  846,  858,  858,  870,
      870,  882,  882,  894,  894,  906,  906,  918,  918,  930,
      930,  942,  942,  954,  954,  966,  966,  978,  978,  990,
      990, 1002, 1002, 1014, 1014, 1026, 1026, 1038, 1038, 1050,
     1050, 1062, 1062, 1074, 1074, 1086, 1086, 1098, 1098, 1110,
     1110, 1122, 1122, 1134, 1134, 1146, 1146, 1158, 1158, 1170,
     1170, 1182, 1182, 1194, 1194, 1206, 1206, 1218, 1218, 1230,

     1230, 1242, 1242, 1254, 1254, 1266, 1266, 1278, 1278, 1290,
     1290, 1302, 1302, 1314, 1314, 1326, 1326, 1338, 1338, 1350,
     1350, 1362, 1362, 1374, 1374, 1386, 1386, 1398, 1398, 1410,
     1410, 1422, 1422, 1434, 1434, 1446, 1446, 1458, 1458, 1470,
     1470, 1482, 1482, 1494, 1494, 1506, 1506, 1518, 1518, 1530,
     1530, 1542, 1542, 1554, 1554, 1566, 1566, 1578, 1578, 1590,
     1590, 1602, 1602, 1614, 1614, 1626, 1626, 1638, 1638, 1650,
     1650, 1662, 1662, 1674, 1674, 1686, 1686, 1698, 1698, 1710,
     1710, 1722, 1722, 1734, 1734, 1746, 1746, 1758, 1758, 1770,
     1770, 1782, 1782, 1794, 1794, 1806, 1806, 1818, 1818, 1830,

     1830, 1842, 1842, 1854, 1854, 1866, 1866, 1878, 1878, 1890,
     1890, 1902, 1902, 1914, 1914, 1926, 1926, 1938, 1938, 1950,
     1950, 1962, 1962, 1974, 1974, 1986, 1986, 1998, 1998, 2010,
     2010, 2022, 2022, 2034, 2034, 2046, 2046, 2058, 2058, 2070,
     2070, 2082, 2082, 2094, 2094, 2106, 2106, 2118, 2118, 2130,
     2130, 2142, 2142, 2154, 2154, 2166, 2166, 2178, 2178, 2190,
     2190, 2202, 2202, 2214, 2214, 2226, 2226, 2238, 2238, 2250,
     2250, 2262, 2262, 2274, 2274, 2286, 2286, 2298, 2298, 2310,
     2310, 2322, 2322, 2334, 2334, 2346, 2346, 2358, 2358, 2370,
     2370, 2382, 2382, 2394, 2394, 2406, 2406, 2418, 2418, 2430,

     2430, 2442, 2442, 2454, 2454, 2466, 2466, 2478, 2478, 2490,
     2490, 2502, 2502, 2514, 2514, 2526, 2526, 2538, 2538, 2550,
     2550, 2562, 2562, 2574, 2574, 2586, 2586, 2598, 2598, 2610,
     2610, 2622, 2622, 2634, 2634, 2646, 2646, 2658, 2658, 2670,
     2670,  566,  565,  564,  563,   18,  554,  557,  554,   76,
      556,  555,  554,  553,  552,  551,   18,  542,  545,  542,
       76,  544,  543,  542,  541,  540,  539,   18,  530,  533,
      530,   76,  532,  531,  530,  529,  528,  527,   18,  518,
      521,  518,   76,  520,  519,  518,  517,  516,  515,   18,
      506,  509,  506,   76,  508,  507,  506,  505,  504,  503,

       18,  494,  497,  494,   76,  496,  495,  494,  493,  492,
      491,   18,  482,  485,  482,   76,  484,  483,  482,  481,
      480,  479,   18,  470,  473,  470,   76,  472,  471,  470,
      469,  468,  467,   18,  458,  461,  458,   76,  460,  459,
      458,  457,  456,  455,   18,  446,  449,  446,   76,  448,
      447,  446,  445,  444,  443,   18,  434,  437,  434,   76,
      436,  435,  434,  433,  432,  431,   18,  422,  425,  422,
       76,  424,  423,  422,  421,  420,  419,   18,  410,  413,
      410,   76,  412,  411,  410,  409,  408,  407,   18,  398,
      401,  398,   76,  400,  399,  398,  397,  396,  395,   18,

      386,  389,  386,   76,  388,  387,  386,  385,  384,  383,
       18,  374,  377,  374,   76,  376,  375,  374,  373,  372,
      371,   18,  362,  365,  362,   76,  364,  363,  362,  361,
      360,  359,   18,  350,  353,  350,   76,  352,  351,  350,
      349,  348,  347,   18,  338,  341,  338,   76,  340,  339,
      338,  337,  336,  335,   18,  326,  329,  326,   76,  328,
      327,  326,  325,  324,  323,   18,  314,  317,  314,   76,
      316,  315,  314,  313,  312,  311,   18,  302,  305,  302,
       76,  304,  303,  302,  301,  300,  299,   18,  290,  293,
      290,   76,  292,  291,  290,  289,  288,  287,   18,  278,

      281,  278,   76,  280,  279,  278,  277,  276,  275,   18,
      266,  269,  266,   76,  268,  267,  266,  265,  264,  263,
       18,  254,  257,  254,   76,  256,  255,  254,  253,  252,
      251,   18,  242,  245,  242,   76,  244,  243,  242,  241,
      240,  239,   18,  230,  233,  230,   76,  232,  231,  230,
      229,  228,  227,   18,  218,  221,  218,   76,  220,  219,
      218,  217,  216,  215,   18,  206,  209,  206,   76,  208,
      207,  206,  205,  204,  203,   18,  194,  197,  194,   76,
      196,  195,  194,  193,  192,  191,   18,  182,  185,  182,
       76,  184,  183,  182,  181,  180,  179,   18,  170,  173,

      170,   76,  172,  171,  170,  169,  168,  167,   18,  158,
      161,  158,   76,  160,  159,  158,  157,  156,  155,   18,
       73,  146,  149,  146,   76,  148,  147,  146,  145,  144,
      143,   18,  137,   62,   76,  133,  136,  133,   76,  135,
      134,  133,  132,  131,  130,   18,  124,  123,  122,  118,
      121,  118,   76,  120,  119,  118,  117,  116,  115,   18,
      109,  108,  107,   25,  103,  106,  103,   76,  105,  104,
      103,  102,  101,  100,   18,   86,   89,   86,   76,   88,
       87,   86,   85,   84,   83,   18,   77,   73,   76,   75,
       74,   73,   72,   71,   70,   18,   64,   63,   62,   61,

       60,   59,   18,   53,   52,   51,   40,   18,   38,   18,
       30,   38,   18,   35,   30,   34,   18,   32,   31,   30,
       18,   28,   27,   26,   25,   18,   17,   18,   11,   17,
       15,   11,   14,   13,   12,   11,   10,    9,    8, 2737,
        3, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737,
     2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737
    } ;

static const flex_int16_t yy_chk[6159] =
    {   0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        1,    1,  552,  553,  554,    1,    2,    2,  555,  556,
      557,    2,   18,  558,  560,  561,  562,  563,  564,   18,
       18,  565,  566,  567,   18,   37,  568,   37,   37,   37,
      569,   37,   37,   37,   37,   37,   37,   37,   37,   37,
       37,   42,  570,   42,   42,   42,  572,   42,   42,   42,
       42,   42,   42,   42,   42,   42,   42,   47,  573,   47,
       47,   47,  574,   47,   47,   47,   47,   47,   47,   47,
       47,   47,   47,   55,  575,   55,   55,   55,  576,   55,
       55,   55,   55,   55,   55,   55,   55,   55,   55,   66,

      577,   66,   66,   66,  578,   66,   66,   66,   66,   66,
       66,   66,   66,   66,   66,   76,  579,   76,  580,  581,
      582,  584,  585,  586,   76,   76,  587,  588,  589,   76,
       79,  590,   79,   79,   79,  591,   79,   79,   79,   79,
       79,   79,   79,   79,   79,   79,   96,  592,   96,   96,
       96,  593,   96,   96,   96,   96,   96,   96,   96,   96,
       96,   96,  111,  594,  111,  111,  111,  596,  111,  111,
      111,  111,  111,  111,  111,  111,  111,  111,  126,  597,
      126,  126,  126,  598,  126,  126,  126,  126,  126,  126,
      126,  126,  126,  126,  139,  599,  139,  139,  139,  600,

      139,  139,  139,  139,  139,  139,  139,  139,  139,  139,
      151,  601,  151,  151,  151,  602,  151,  151,  151,  151,
      151,  151,  151,  151,  151,  151,  163,  603,  163,  163,
      163,  604,  163,  163,  163,  163,  163,  163,  163,  163,
      163,  163,  175,  605,  175,  175,  175,  606,  175,  175,
      175,  175,  175,  175,  175,  175,  175,  175,  187,  608,
      187,  187,  187,  609,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  199,  610,  199,  199,  199,  611,
      199,  199,  199,  199,  199,  199,  199,  199,  199,  199,
      211,  612,  211,  211,  211,  613,  211,  211,  211,  211,

      211,  211,  211,  211,  211,  211,  223,  614,  223,  223,
      223,  615,  223,  223,  223,  223,  223,  223,  223,  223,
      223,  223,  235,  616,  235,  235,  235,  617,  235,  235,
      235,  235,  235,  235,  235,  235,  235,  235,  247,  618,
      247,  247,  247,  620,  247,  247,  247,  247,  247,  247,
      247,  247,  247,  247,  259,  621,  259,  259,  259,  622,
      259,  259,  259,  259,  259,  259,  259,  259,  259,  259,
      271,  623,  271,  271,  271,  624,  271,  271,  271,  271,
      271,  271,  271,  271,  271,  271,  283,  625,  283,  283,
      283,  626,  283,  283,  283,  283,  283,  283,  283,  283,

      283,  283,  295,  627,  295,  295,  295,  628,  295,  295,
      295,  295,  295,  295,  295,  295,  295,  295,  307,  629,
      307,  307,  307,  630,  307,  307,  307,  307,  307,  307,
      307,  307,  307,  307,  319,  632,  319,  319,  319,  633,
      319,  319,  319,  319,  319,  319,  319,  319,  319,  319,
      331,  634,  331,  331,  331,  635,  331,  331,  331,  331,
      331,  331,  331,  331,  331,  331,  343,  636,  343,  343,
      343,  637,  343,  343,  343,  343,  343,  343,  343,  343,
      343,  343,  355,  638,  355,  355,  355,  639,  355,  355,
      355,  355,  355,  355,  355,  355,  355,  355,  367,  640,

      367,  367,  367,  641,  367,  367,  367,  367,  367,  367,
      367,  367,  367,  367,  379,  642,  379,  379,  379,  644,
      379,  379,  379,  379,  379,  379,  379,  379,  379,  379,
      391,  645,  391,  391,  391,  646,  391,  391,  391,  391,
      391,  391,  391,  391,  391,  391,  403,  647,  403,  403,
      403,  648,  403,  403,  403,  403,  403,  403,  403,  403,
      403,  403,  415,  649,  415,  415,  415,  650,  415,  415,
      415,  415,  415,  415,  415,  415,  415,  415,  427,  651,
      427,  427,  427,  652,  427,  427,  427,  427,  427,  427,
      427,  427,  427,  427,  439,  653,  439,  439,  439,  654,

      439,  439,  439,  439,  439,  439,  439,  439,  439,  439,
      451,  656,  451,  451,  451,  657,  451,  451,  451,  451,
      451,  451,  451,  451,  451,  451,  463,  658,  463,  463,
      463,  659,  463,  463,  463,  463,  463,  463,  463,  463,
      463,  463,  475,  660,  475,  475,  475,  661,  475,  475,
      475,  475,  475,  475,  475,  475,  475,  475,  487,  662,
      487,  487,  487,  663,  487,  487,  487,  487,  487,  487,
      487,  487,  487,  487,  499,  664,  499,  499,  499,  665,
      499,  499,  499,  499,  499,  499,  499,  499,  499,  499,
      511,  666,  511,  511,  511,  668,  511,  511,  511,  511,

      511,  511,  511,  511,  511,  511,  523,  669,  523,  523,
      523,  670,  523,  523,  523,  523,  523,  523,  523,  523,
      523,  523,  535,  671,  535,  535,  535,  672,  535,  535,
      535,  535,  535,  535,  535,  535,  535,  535,  547,  673,
      547,  547,  547,  674,  547,  547,  547,  547,  547,  547,
      547,  547,  547,  547,  559,  675,  559,  559,  559,  676,
      559,  559,  559,  559,  559,  559,  559,  559,  559,  559,
      571,  677,  571,  571,  571,  678,  571,  571,  571,  571,
      571,  571,  571,  571,  571,  571,  583,  680,  583,  583,
      583,  681,  583,  583,  583,  583,  583,  583,  583,  583,

      583,  583,  595,  682,  595,  595,  595,  683,  595,  595,
      595,  595,  595,  595,  595,  595,  595,  595,  607,  684,
      607,  607,  607,  685,  607,  607,  607,  607,  607,  607,
      607,  607,  607,  607,  619,  686,  619,  619,  619,  687,
      619,  619,  619,  619,  619,  619,  619,  619,  619,  619,
      631,  688,  631,  631,  631,  689,  631,  631,  631,  631,
      631,  631,  631,  631,  631,  631,  643,  690,  643,  643,
      643,  692,  643,  643,  643,  643,  643,  643,  643,  643,
      643,  643,  655,  693,  655,  655,  655,  694,  655,  655,
      655,  655,  655,  655,  655,  655,  655,  655,  667,  695,

      667,  667,  667,  696,  667,  667,  667,  667,  667,  667,
      667,  667,  667,  667,  679,  697,  679,  679,  679,  698,
      679,  679,  679,  679,  679,  679,  679,  679,  679,  679,
      691,  699,  691,  691,  691,  700,  691,  691,  691,  691,
      691,  691,  691,  691,  691,  691,  701,  702,  703,  704,
      703,  703,  703,  705,  703,  703,  703,  703,  703,  703,
      703,  703,  703,  703,  706,  707,  708,  709,  710,  711,
      712,  713,  714,  715,  716,  715,  715,  715,  717,  715,
      715,  715,  715,  715,  715,  715,  715,  715,  715,  718,
      719,  720,  721,  722,  723,  724,  725,  726,  727,  728,

      727,  727,  727,  729,  727,  727,  727,  727,  727,  727,
      727,  727,  727,  727,  730,  731,  732,  733,  734,  735,
      736,  737,  738,  739,  740,  739,  739,  739,  741,  739,
      739,  739,  739,  739,  739,  739,  739,  739,  739,  742,
      743,  744,  745,  746,  747,  748,  749,  750,  751,  752,
      751,  751,  751,  753,  751,  751,  751,  751,  751,  751,
      751,  751,  751,  751,  754,  755,  756,  757,  758,  759,
      760,  761,  762,  763,  764,  763,  763,  763,  765,  763,
      763,  763,  763,  763,  763,  763,  763,  763,  763,  766,
      767,  768,  769,  770,  771,  772,  773,  774,  775,  776,

      775,  775,  775,  777,  775,  775,  775,  775,  775,  775,
      775,  775,  775,  775,  778,  779,  780,  781,  782,  783,
      784,  785,  786,  787,  788,  787,  787,  787,  789,  787,
      787,  787,  787,  787,  787,  787,  787,  787,  787,  790,
      791,  792,  793,  794,  795,  796,  797,  798,  799,  800,
      799,  799,  799,  801,  799,  799,  799,  799,  799,  799,
      799,  799,  799,  799,  802,  803,  804,  805,  806,  807,
      808,  809,  810,  811,  812,  811,  811,  811,  813,  811,
      811,  811,  811,  811,  811,  811,  811,  811,  811,  814,
      815,  816,  817,  818,  819,  820,  821,  822,  823,  824,

      823,  823,  823,  825,  823,  823,  823,  823,  823,  823,
      823,  823,  823,  823,  826,  827,  828,  829,  830,  831,
      832,  833,  834,  835,  836,  835,  835,  835,  837,  835,
      835,  835,  835,  835,  835,  835,  835,  835,  835,  838,
      839,  840,  841,  842,  843,  844,  845,  846,  847,  848,
      847,  847,  847,  849,  847,  847,  847,  847,  847,  847,
      847,  847,  847,  847,  850,  851,  852,  853,  854,  855,
      856,  857,  858,  859,  860,  859,  859,  859,  861,  859,
      859,  859,  859,  859,  859,  859,  859,  859,  859,  862,
      863,  864,  865,  866,  867,  868,  869,  870,  871,  872,

      871,  871,  871,  873,  871,  871,  871,  871,  871,  871,
      871,  871,  871,  871,  874,  875,  876,  877,  878,  879,
      880,  881,  882,  883,  884,  883,  883,  883,  885,  883,
      883,  883,  883,  883,  883,  883,  883,  883,  883,  886,
      887,  888,  889,  890,  891,  892,  893,  894,  895,  896,
      895,  895,  895,  897,  895,  895,  895,  895,  895,  895,
      895,  895,  895,  895,  898,  899,  900,  901,  902,  903,
      904,  905,  906,  907,  908,  907,  907,  907,  909,  907,
      907,  907,  907,  907,  907,  907,  907,  907,  907,  910,
      911,  912,  913,  914,  915,  916,  917,  918,  919,  920,

      919,  919,  919,  921,  919,  919,  919,  919,  919,  919,
      919,  919,  919,  919,  922,  923,  924,  925,  926,  927,
      928,  929,  930,  931,  932,  931,  931,  931,  933,  931,
      931,  931,  931,  931,  931,  931,  931,  931,  931,  934,
      935,  936,  937,  938,  939,  940,  941,  942,  943,  944,
      943,  943,  943,  945,  943,  943,  943,  943,  943,  943,
      943,  943,  943,  943,  946,  947,  948,  949,  950,  951,
      952,  953,  954,  955,  956,  955,  955,  955,  957,  955,
      955,  955,  955,  955,  955,  955,  955,  955,  955,  958,
      959,  960,  961,  962,  963,  964,  965,  966,  967,  968,

      967,  967,  967,  969,  967,  967,  967,  967,  967,  967,
      967,  967,  967,  967,  970,  971,  972,  973,  974,  975,
      976,  977,  978,  979,  980,  979,  979,  979,  981,  979,
      979,  979,  979,  979,  979,  979,  979,  979,  979,  982,
      983,  984,  985,  986,  987,  988,  989,  990,  991,  992,
      991,  991,  991,  993,  991,  991,  991,  991,  991,  991,
      991,  991,  991,  991,  994,  995,  996,  997,  998,  999,
     1000, 1001, 1002, 1003, 1004, 1003, 1003, 1003, 1005, 1003,
     1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1006,
     1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,

     1015, 1015, 1015, 1017, 1015, 1015, 1015, 1015, 1015, 1015,
     1015, 1015, 1015, 1015, 1018, 1019, 1020, 1021, 1022, 1023,
     1024, 1025, 1026, 1027, 1028, 1027, 1027, 1027, 1029, 1027,
     1027, 1027, 1027, 1027, 1027, 1027, 1027, 1027, 1027, 1030,
     1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040,
     1039, 1039, 1039, 1041, 1039, 1039, 1039, 1039, 1039, 1039,
     1039, 1039, 1039, 1039, 1042, 1043, 1044, 1045, 1046, 1047,
     1048, 1049, 1050, 1051, 1052, 1051, 1051, 1051, 1053, 1051,
     1051, 1051, 1051, 1051, 1051, 1051, 1051, 1051, 1051, 1054,
     1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064,

     1063, 1063, 1063, 1065, 1063, 1063, 1063, 1063, 1063, 1063,
     1063, 1063, 1063, 1063, 1066, 1067, 1068, 1069, 1070, 1071,
     1072, 1073, 1074, 1075, 1076, 1075, 1075, 1075, 1077, 1075,
     1075, 1075, 1075, 1075, 1075, 1075, 1075, 1075, 1075, 1078,
     1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088,
     1087, 1087, 1087, 1089, 1087, 1087, 1087, 1087, 1087, 1087,
     1087, 1087, 1087, 1087, 1090, 1091, 1092, 1093, 1094, 1095,
     1096, 1097, 1098, 1099, 1100, 1099, 1099, 1099, 1101, 1099,
     1099, 1099, 1099, 1099, 1099, 1099, 1099, 1099, 1099, 1102,
     1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112,

     1111, 1111, 1111, 1113, 1111, 1111, 1111, 1111, 1111, 1111,
     1111, 1111, 1111, 1111, 1114, 1115, 1116, 1117, 1118, 1119,
     1120, 1121, 1122, 1123, 1124, 1123, 1123, 1123, 1125, 1123,
     1123, 1123, 1123, 1123, 1123, 1123, 1123, 1123, 1123, 1126,
     1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136,
     1135, 1135, 1135, 1137, 1135, 1135, 1135, 1135, 1135, 1135,
     1135, 1135, 1135, 1135, 1138, 1139, 1140, 1141, 1142, 1143,
     1144, 1145, 1146, 1147, 1148, 1147, 1147, 1147, 1149, 1147,
     1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147, 1150,
     1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160,

     1159, 1159, 1159, 1161, 1159, 1159, 1159, 1159, 1159, 1159,
     1159, 1159, 1159, 1159, 1162, 1163, 1164, 1165, 1166, 1167,
     1168, 1169, 1170, 1171, 1172, 1171, 1171, 1171, 1173, 1171,
     1171, 1171, 1171, 1171, 1171, 1171, 1171, 1171, 1171, 1174,
     1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184,
     1183, 1183, 1183, 1185, 1183, 1183, 1183, 1183, 1183, 1183,
     1183, 1183, 1183, 1183, 1186, 1187, 1188, 1189, 1190, 1191,
     1192, 1193, 1194, 1195, 1196, 1195, 1195, 1195, 1197, 1195,
     1195, 1195, 1195, 1195, 1195, 1195, 1195, 1195, 1195, 1198,
     1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208,

     1207, 1207, 1207, 1209, 1207, 1207, 1207, 1207, 1207, 1207,
     1207, 1207, 1207, 1207, 1210, 1211, 1212, 1213, 1214, 1215,
     1216, 1217, 1218, 1219, 1220, 1219, 1219, 1219, 1221, 1219,
     1219, 1219, 1219, 1219, 1219, 1219, 1219, 1219, 1219, 1222,
     1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
     1231, 1231, 1231, 1233, 1231, 1231, 1231, 1231, 1231, 1231,
     1231, 1231, 1231, 1231, 1234, 1235, 1236, 1237, 1238, 1239,
     1240, 1241, 1242, 1243, 1244, 1243, 1243, 1243, 1245, 1243,
     1243, 1243, 1243, 1243, 1243, 1243, 1243, 1243, 1243, 1246,
     1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256,

     1255, 1255, 1255, 1257, 1255, 1255, 1255, 1255, 1255, 1255,
     1255, 1255, 1255, 1255, 1258, 1259, 1260, 1261, 1262, 1263,
     1264, 1265, 1266, 1267, 1268, 1267, 1267, 1267, 1269, 1267,
     1267, 1267, 1267, 1267, 1267, 1267, 1267, 1267, 1267, 1270,
     1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280,
     1279, 1279, 1279, 1281, 1279, 1279, 1279, 1279, 1279, 1279,
     1279, 1279, 1279, 1279, 1282, 1283, 1284, 1285, 1286, 1287,
     1288, 1289, 1290, 1291, 1292, 1291, 1291, 1291, 1293, 1291,
     1291, 1291, 1291, 1291, 1291, 1291, 1291, 1291, 1291, 1294,
     1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304,

     1303, 1303, 1303, 1305, 1303, 1303, 1303, 1303, 1303, 1303,
     1303, 1303, 1303, 1303, 1306, 1307, 1308, 1309, 1310, 1311,
     1312, 1313, 1314, 1315, 1316, 1315, 1315, 1315, 1317, 1315,
     1315, 1315, 1315, 1315, 1315, 1315, 1315, 1315, 1315, 1318,
     1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328,
     1327, 1327, 1327, 1329, 1327, 1327, 1327, 1327, 1327, 1327,
     1327, 1327, 1327, 1327, 1330, 1331, 1332, 1333, 1334, 1335,
     1336, 1337, 1338, 1339, 1340, 1339, 1339, 1339, 1341, 1339,
     1339, 1339, 1339, 1339, 1339, 1339, 1339, 1339, 1339, 1342,
     1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352,

     1351, 1351, 1351, 1353, 1351, 1351, 1351, 1351, 1351, 1351,
     1351, 1351, 1351, 1351, 1354, 1355, 1356, 1357, 1358, 1359,
     1360, 1361, 1362, 1363, 1364, 1363, 1363, 1363, 1365, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1366,
     1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376,
     1375, 1375, 1375, 1377, 1375, 1375, 1375, 1375, 1375, 1375,
     1375, 1375, 1375, 1375, 1378, 1379, 1380, 1381, 1382, 1383,
     1384, 1385, 1386, 1387, 1388, 1387, 1387, 1387, 1389, 1387,
     1387, 1387, 1387, 1387, 1387, 1387, 1387, 1387, 1387, 1390,
     1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400,

     1399, 1399, 1399, 1401, 1399, 1399, 1399, 1399, 1399, 1399,
     1399, 1399, 1399, 1399, 1402, 1403, 1404, 1405, 1406, 1407,
     1408, 1409, 1410, 1411, 1412, 1411, 1411, 1411, 1413, 1411,
     1411, 1411, 1411, 1411, 1411, 1411, 1411, 1411, 1411, 1414,
     1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424,
     1423, 1423, 1423, 1425, 1423, 1423, 1423, 1423, 1423, 1423,
     1423, 1423, 1423, 1423, 1426, 1427, 1428, 1429, 1430, 1431,
     1432, 1433, 1434, 1435, 1436, 1435, 1435, 1435, 1437, 1435,
     1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1435, 1438,
     1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448,

     1447, 1447, 1447, 1449, 1447, 1447, 1447, 1447, 1447, 1447,
     1447, 1447, 1447, 1447, 1450, 1451, 1452, 1453, 1454, 1455,
     1456, 1457, 1458, 1459, 1460, 1459, 1459, 1459, 1461, 1459,
     1459, 1459, 1459, 1459, 1459, 1459, 1459, 1459, 1459, 1462,
     1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472,
     1471, 1471, 1471, 1473, 1471, 1471, 1471, 1471, 1471, 1471,
     1471, 1471, 1471, 1471, 1474, 1475, 1476, 1477, 1478, 1479,
     1480, 1481, 1482, 1483, 1484, 1483, 1483, 1483, 1485, 1483,
     1483, 1483, 1483, 1483, 1483, 1483, 1483, 1483, 1483, 1486,
     1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496,

     1495, 1495, 1495, 1497, 1495, 1495, 1495, 1495, 1495, 1495,
     1495, 1495, 1495, 1495, 1498, 1499, 1500, 1501, 1502, 1503,
     1504, 1505, 1506, 1507, 1508, 1507, 1507, 1507, 1509, 1507,
     1507, 1507, 1507, 1507, 1507, 1507, 1507, 1507, 1507, 1510,
     1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520,
     1519, 1519, 1519, 1521, 1519, 1519, 1519, 1519, 1519, 1519,
     1519, 1519, 1519, 1519, 1522, 1523, 1524, 1525, 1526, 1527,
     1528, 1529, 1530, 1531, 1532, 1531, 1531, 1531, 1533, 1531,
     1531, 1531, 1531, 1531, 1531, 1531, 1531, 1531, 1531, 1534,
     1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544,

     1543, 1543, 1543, 1545, 1543, 1543, 1543, 1543, 1543, 1543,
     1543, 1543, 1543, 1543, 1546, 1547, 1548, 1549, 1550, 1551,
     1552, 1553, 1554, 1555, 1556, 1555, 1555, 1555, 1557, 1555,
     1555, 1555, 1555, 1555, 1555, 1555, 1555, 1555, 1555, 1558,
     1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568,
     1567, 1567, 1567, 1569, 1567, 1567, 1567, 1567, 1567, 1567,
     1567, 1567, 1567, 1567, 1570, 1571, 1572, 1573, 1574, 1575,
     1576, 1577, 1578, 1579, 1580, 1579, 1579, 1579, 1581, 1579,
     1579, 1579, 1579, 1579, 1579, 1579, 1579, 1579, 1579, 1582,
     1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592,

     1591, 1591, 1591, 1593, 1591, 1591, 1591, 1591, 1591, 1591,
     1591, 1591, 1591, 1591, 1594, 1595, 1596, 1597, 1598, 1599,
     1600, 1601, 1602, 1603, 1604, 1603, 1603, 1603, 1605, 1603,
     1603, 1603, 1603, 1603, 1603, 1603, 1603, 1603, 1603, 1606,
     1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616,
     1615, 1615, 1615, 1617, 1615, 1615, 1615, 1615, 1615, 1615,
     1615, 1615, 1615, 1615, 1618, 1619, 1620, 1621, 1622, 1623,
     1624, 1625, 1626, 1627, 1628, 1627, 1627, 1627, 1629, 1627,
     1627, 1627, 1627, 1627, 1627, 1627, 1627, 1627, 1627, 1630,
     1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640,

     1639, 1639, 1639, 1641, 1639, 1639, 1639, 1639, 1639, 1639,
     1639, 1639, 1639, 1639, 1642, 1643, 1644, 1645, 1646, 1647,
     1648, 1649, 1650, 1651, 1652, 1651, 1651, 1651, 1653, 1651,
     1651, 1651, 1651, 1651, 1651, 1651, 1651, 1651, 1651, 1654,
     1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664,
     1663, 1663, 1663, 1665, 1663, 1663, 1663, 1663, 1663, 1663,
     1663, 1663, 1663, 1663, 1666, 1667, 1668, 1669, 1670, 1671,
     1672, 1673, 1674, 1675, 1676, 1675, 1675, 1675, 1677, 1675,
     1675, 1675, 1675, 1675, 1675, 1675, 1675, 1675, 1675, 1678,
     1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688,

     1687, 1687, 1687, 1689, 1687, 1687, 1687, 1687, 1687, 1687,
     1687, 1687, 1687, 1687, 1690, 1691, 1692, 1693, 1694, 1695,
     1696, 1697, 1698, 1699, 1700, 1699, 1699, 1699, 1701, 1699,
     1699, 1699, 1699, 1699, 1699, 1699, 1699, 1699, 1699, 1702,
     1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712,
     1711, 1711, 1711, 1713, 1711, 1711, 1711, 1711, 1711, 1711,
     1711, 1711, 1711, 1711, 1714, 1715, 1716, 1717, 1718, 1719,
     1720, 1721, 1722, 1723, 1724, 1723, 1723, 1723, 1725, 1723,
     1723, 1723, 1723, 1723, 1723, 1723, 1723, 1723, 1723, 1726,
     1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736,

     1735, 1735, 1735, 1737, 1735, 1735, 1735, 1735, 1735, 1735,
     1735, 1735, 1735, 1735, 1738, 1739, 1740, 1741, 1742, 1743,
     1744, 1745, 1746, 1747, 1748, 1747, 1747, 1747, 1749, 1747,
     1747, 1747, 1747, 1747, 1747, 1747, 1747, 1747, 1747, 1750,
     1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760,
     1759, 1759, 1759, 1761, 1759, 1759, 1759, 1759, 1759, 1759,
     1759, 1759, 1759, 1759, 1762, 1763, 1764, 1765, 1766, 1767,
     1768, 1769, 1770, 1771, 1772, 1771, 1771, 1771, 1773, 1771,
     1771, 1771, 1771, 1771, 1771, 1771, 1771, 1771, 1771, 1774,
     1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784,

     1783, 1783, 1783, 1785, 1783, 1783, 1783, 1783, 1783, 1783,
     1783, 1783, 1783, 1783, 1786, 1787, 1788, 1789, 1790, 1791,
     1792, 1793, 1794, 1795, 1796, 1795, 1795, 1795, 1797, 1795,
     1795, 1795, 1795, 1795, 1795, 1795, 1795, 1795, 1795, 1798,
     1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808,
     1807, 1807, 1807, 1809, 1807, 1807, 1807, 1807, 1807, 1807,
     1807, 1807, 1807, 1807, 1810, 1811, 1812, 1813, 1814, 1815,
     1816, 1817, 1818, 1819, 1820, 1819, 1819, 1819, 1821, 1819,
     1819, 1819, 1819, 1819, 1819, 1819, 1819, 1819, 1819, 1822,
     1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832,

     1831, 1831, 1831, 1833, 1831, 1831, 1831, 1831, 1831, 1831,
     1831, 1831, 1831, 1831, 1834, 1835, 1836, 1837, 1838, 1839,
     1840, 1841, 1842, 1843, 1844, 1843, 1843, 1843, 1845, 1843,
     1843, 1843, 1843, 1843, 1843, 1843, 1843, 1843, 1843, 1846,
     1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856,
     1855, 1855, 1855, 1857, 1855, 1855, 1855, 1855, 1855, 1855,
     1855, 1855, 1855, 1855, 1858, 1859, 1860, 1861, 1862, 1863,
     1864, 1865, 1866, 1867, 1868, 1867, 1867, 1867, 1869, 1867,
     1867, 1867, 1867, 1867, 1867, 1867, 1867, 1867, 1867, 1870,
     1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880,

     1879, 1879, 1879, 1881, 1879, 1879, 1879, 1879, 1879, 1879,
     1879, 1879, 1879, 1879, 1882, 1883, 1884, 1885, 1886, 1887,
     1888, 1889, 1890, 1891, 1892, 1891, 1891, 1891, 1893, 1891,
     1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1891, 1894,
     1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904,
     1903, 1903, 1903, 1905, 1903, 1903, 1903, 1903, 1903, 1903,
     1903, 1903, 1903, 1903, 1906, 1907, 1908, 1909, 1910, 1911,
     1912, 1913, 1914, 1915, 1916, 1915, 1915, 1915, 1917, 1915,
     1915, 1915, 1915, 1915, 1915, 1915, 1915, 1915, 1915, 1918,
     1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928,

     1927, 1927, 1927, 1929, 1927, 1927, 1927, 1927, 1927, 1927,
     1927, 1927, 1927, 1927, 1930, 1931, 1932, 1933, 1934, 1935,
     1936, 1937, 1938, 1939, 1940, 1939, 1939, 1939, 1941, 1939,
     1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1939, 1942,
     1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952,
     1951, 1951, 1951, 1953, 1951, 1951, 1951, 1951, 1951, 1951,
     1951, 1951, 1951, 1951, 1954, 1955, 1956, 1957, 1958, 1959,
     1960, 1961, 1962, 1963, 1964, 1963, 1963, 1963, 1965, 1963,
     1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1963, 1966,
     1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976,

     1975, 1975, 1975, 1977, 1975, 1975, 1975, 1975, 1975, 1975,
     1975, 1975, 1975, 1975, 1978, 1979, 1980, 1981, 1982, 1983,
     1984, 1985, 1986, 1987, 1988, 1987, 1987, 1987, 1989, 1987,
     1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1990,
     1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,
     1999, 1999, 1999, 2001, 1999, 1999, 1999, 1999, 1999, 1999,
     1999, 1999, 1999, 1999, 2002, 2003, 2004, 2005, 2006, 2007,
     2008, 2009, 2010, 2011, 2012, 2011, 2011, 2011, 2013, 2011,
     2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2011, 2014,
     2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024,

     2023, 2023, 2023, 2025, 2023, 2023, 2023, 2023, 2023, 2023,
     2023, 2023, 2023, 2023, 2026, 2027, 2028, 2029, 2030, 2031,
     2032, 2033, 2034, 2035, 2036, 2035, 2035, 2035, 2037, 2035,
     2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035, 2035, 2038,
     2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048,
     2047, 2047, 2047, 2049, 2047, 2047, 2047, 2047, 2047, 2047,
     2047, 2047, 2047, 2047, 2050, 2051, 2052, 2053, 2054, 2055,
     2056, 2057, 2058, 2059, 2060, 2059, 2059, 2059, 2061, 2059,
     2059, 2059, 2059, 2059, 2059, 2059, 2059, 2059, 2059, 2062,
     2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072,

     2071, 2071, 2071, 2073, 2071, 2071, 2071, 2071, 2071, 2071,
     2071, 2071, 2071, 2071, 2074, 2075, 2076, 2077, 2078, 2079,
     2080, 2081, 2082, 2083, 2084, 2083, 2083, 2083, 2085, 2083,
     2083, 2083, 2083, 2083, 2083, 2083, 2083, 2083, 2083, 2086,
     2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096,
     2095, 2095, 2095, 2097, 2095, 2095, 2095, 2095, 2095, 2095,
     2095, 2095, 2095, 2095, 2098, 2099, 2100, 2101, 2102, 2103,
     2104, 2105, 2106, 2107, 2108, 2107, 2107, 2107, 2109, 2107,
     2107, 2107, 2107, 2107, 2107, 2107, 2107, 2107, 2107, 2110,
     2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120,

     2119, 2119, 2119, 2121, 2119, 2119, 2119, 2119, 2119, 2119,
     2119, 2119, 2119, 2119, 2122, 2123, 2124, 2125, 2126, 2127,
     2128, 2129, 2130, 2131, 2132, 2131, 2131, 2131, 2133, 2131,
     2131, 2131, 2131, 2131, 2131, 2131, 2131, 2131, 2131, 2134,
     2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144,
     2143, 2143, 2143, 2145, 2143, 2143, 2143, 2143, 2143, 2143,
     2143, 2143, 2143, 2143, 2146, 2147, 2148, 2149, 2150, 2151,
     2152, 2153, 2154, 2155, 2156, 2155, 2155, 2155, 2157, 2155,
     2155, 2155, 2155, 2155, 2155, 2155, 2155, 2155, 2155, 2158,
     2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168,

     2167, 2167, 2167, 2169, 2167, 2167, 2167, 2167, 2167, 2167,
     2167, 2167, 2167, 2167, 2170, 2171, 2172, 2173, 2174, 2175,
     2176, 2177, 2178, 2179, 2180, 2179, 2179, 2179, 2181, 2179,
     2179, 2179, 2179, 2179, 2179, 2179, 2179, 2179, 2179, 2182,
     2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192,
     2191, 2191, 2191, 2193, 2191, 2191, 2191, 2191, 2191, 2191,
     2191, 2191, 2191, 2191, 2194, 2195, 2196, 2197, 2198, 2199,
     2200, 2201, 2202, 2203, 2204, 2203, 2203, 2203, 2205, 2203,
     2203, 2203, 2203, 2203, 2203, 2203, 2203, 2203, 2203, 2206,
     2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216,

     2215, 2215, 2215, 2217, 2215, 2215, 2215, 2215, 2215, 2215,
     2215, 2215, 2215, 2215, 2218, 2219, 2220, 2221, 2222, 2223,
     2224, 2225, 2226, 2227, 2228, 2227, 2227, 2227, 2229, 2227,
     2227, 2227, 2227, 2227, 2227, 2227, 2227, 2227, 2227, 2230,
     2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240,
     2239, 2239, 2239, 2241, 2239, 2239, 2239, 2239, 2239, 2239,
     2239, 2239, 2239, 2239, 2242, 2243, 2244, 2245, 2246, 2247,
     2248, 2249, 2250, 2251, 2252, 2251, 2251, 2251, 2253, 2251,
     2251, 2251, 2251, 2251, 2251, 2251, 2251, 2251, 2251, 2254,
     2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264,

     2263, 2263, 2263, 2265, 2263, 2263, 2263, 2263, 2263, 2263,
     2263, 2263, 2263, 2263, 2266, 2267, 2268, 2269, 2270, 2271,
     2272, 2273, 2274, 2275, 2276, 2275, 2275, 2275, 2277, 2275,
     2275, 2275, 2275, 2275, 2275, 2275, 2275, 2275, 2275, 2278,
     2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288,
     2287, 2287, 2287, 2289, 2287, 2287, 2287, 2287, 2287, 2287,
     2287, 2287, 2287, 2287, 2290, 2291, 2292, 2293, 2294, 2295,
     2296, 2297, 2298, 2299, 2300, 2299, 2299, 2299, 2301, 2299,
     2299, 2299, 2299, 2299, 2299, 2299, 2299, 2299, 2299, 2302,
     2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312,

     2311, 2311, 2311, 2313, 2311, 2311, 2311, 2311, 2311, 2311,
     2311, 2311, 2311, 2311, 2314, 2315, 2316, 2317, 2318, 2319,
     2320, 2321, 2322, 2323, 2324, 2323, 2323, 2323, 2325, 2323,
     2323, 2323, 2323, 2323, 2323, 2323, 2323, 2323, 2323, 2326,
     2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336,
     2335, 2335, 2335, 2337, 2335, 2335, 2335, 2335, 2335, 2335,
     2335, 2335, 2335, 2335, 2338, 2339, 2340, 2341, 2342, 2343,
     2344, 2345, 2346, 2347, 2348, 2347, 2347, 2347, 2349, 2347,
     2347, 2347, 2347, 2347, 2347, 2347, 2347, 2347, 2347, 2350,
     2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360,

     2359, 2359, 2359, 2361, 2359, 2359, 2359, 2359, 2359, 2359,
     2359, 2359, 2359, 2359, 2362, 2363, 2364, 2365, 2366, 2367,
     2368, 2369, 2370, 2371, 2372, 2371, 2371, 2371, 2373, 2371,
     2371, 2371, 2371, 2371, 2371, 2371, 2371, 2371, 2371, 2374,
     2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384,
     2383, 2383, 2383, 2385, 2383, 2383, 2383, 2383, 2383, 2383,
     2383, 2383, 2383, 2383, 2386, 2387, 2388, 2389, 2390, 2391,
     2392, 2393, 2394, 2395, 2396, 2395, 2395, 2395, 2397, 2395,
     2395, 2395, 2395, 2395, 2395, 2395, 2395, 2395, 2395, 2398,
     2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408,

     2407, 2407, 2407, 2409, 2407, 2407, 2407, 2407, 2407, 2407,
     2407, 2407, 2407, 2407, 2410, 2411, 2412, 2413, 2414, 2415,
     2416, 2417, 2418, 2419, 2420, 2419, 2419, 2419, 2421, 2419,
     2419, 2419, 2419, 2419, 2419, 2419, 2419, 2419, 2419, 2422,
     2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432,
     2431, 2431, 2431, 2433, 2431, 2431, 2431, 2431, 2431, 2431,
     2431, 2431, 2431, 2431, 2434, 2435, 2436, 2437, 2438, 2439,
     2440, 2441, 2442, 2443, 2444, 2443, 2443, 2443, 2445, 2443,
     2443, 2443, 2443, 2443, 2443, 2443, 2443, 2443, 2443, 2446,
     2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456,

     2455, 2455, 2455, 2457, 2455, 2455, 2455, 2455, 2455, 2455,
     2455, 2455, 2455, 2455, 2458, 2459, 2460, 2461, 2462, 2463,
     2464, 2465, 2466, 2467, 2468, 2467, 2467, 2467, 2469, 2467,
     2467, 2467, 2467, 2467, 2467, 2467, 2467, 2467, 2467, 2470,
     2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480,
     2479, 2479, 2479, 2481, 2479, 2479, 2479, 2479, 2479, 2479,
     2479, 2479, 2479, 2479, 2482, 2483, 2484, 2485, 2486, 2487,
     2488, 2489, 2490, 2491, 2492, 2491, 2491, 2491, 2493, 2491,
     2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2491, 2494,
     2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504,

     2503, 2503, 2503, 2505, 2503, 2503, 2503, 2503, 2503, 2503,
     2503, 2503, 2503, 2503, 2506, 2507, 2508, 2509, 2510, 2511,
     2512, 2513, 2514, 2515, 2516, 2515, 2515, 2515, 2517, 2515,
     2515, 2515, 2515, 2515, 2515, 2515, 2515, 2515, 2515, 2518,
     2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528,
     2527, 2527, 2527, 2529, 2527, 2527, 2527, 2527, 2527, 2527,
     2527, 2527, 2527, 2527, 2530, 2531, 2532, 2533, 2534, 2535,
     2536, 2537, 2538, 2539, 2540, 2539, 2539, 2539, 2541, 2539,
     2539, 2539, 2539, 2539, 2539, 2539, 2539, 2539, 2539, 2542,
     2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552,

     2551, 2551, 2551, 2553, 2551, 2551, 2551, 2551, 2551, 2551,
     2551, 2551, 2551, 2551, 2554, 2555, 2556, 2557, 2558, 2559,
     2560, 2561, 2562, 2563, 2564, 2563, 2563, 2563, 2565, 2563,
     2563, 2563, 2563, 2563, 2563, 2563, 2563, 2563, 2563, 2566,
     2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576,
     2575, 2575, 2575, 2577, 2575, 2575, 2575, 2575, 2575, 2575,
     2575, 2575, 2575, 2575, 2578, 2579, 2580, 2581, 2582, 2583,
     2584, 2585, 2586, 2587, 2588, 2587, 2587, 2587, 2589, 2587,
     2587, 2587, 2587, 2587, 2587, 2587, 2587, 2587, 2587, 2590,
     2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600,

     2599, 2599, 2599, 2601, 2599, 2599, 2599, 2599, 2599, 2599,
     2599, 2599, 2599, 2599, 2602, 2603, 2604, 2605, 2606, 2607,
     2608, 2609, 2610, 2611, 2612, 2611, 2611, 2611, 2613, 2611,
     2611, 2611, 2611, 2611, 2611, 2611, 2611, 2611, 2611, 2614,
     2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624,
     2623, 2623, 2623, 2625, 2623, 2623, 2623, 2623, 2623, 2623,
     2623, 2623, 2623, 2623, 2626, 2627, 2628, 2629, 2630, 2631,
     2632, 2633, 2634, 2635, 2636, 2635, 2635, 2635, 2637, 2635,
     2635, 2635, 2635, 2635, 2635, 2635, 2635, 2635, 2635, 2638,
     2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648,

     2647, 2647, 2647, 2649, 2647, 2647, 2647, 2647, 2647, 2647,
     2647, 2647, 2647, 2647, 2650, 2651, 2652, 2653, 2654, 2655,
     2656, 2657, 2658, 2659, 2660, 2659, 2659, 2659, 2661, 2659,
     2659, 2659, 2659, 2659, 2659, 2659, 2659, 2659, 2659, 2662,
     2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672,
     2671, 2671, 2671, 2673, 2671, 2671, 2671, 2671, 2671, 2671,
     2671, 2671, 2671, 2671, 2674, 2675, 2676, 2677, 2678, 2679,
     2680, 2681, 2682, 2683, 2682, 2682, 2682, 2684, 2682, 2682,
     2682, 2682, 2682, 2682, 2682, 2682, 2682, 2682, 2685, 2686,
     2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2693, 2693,

     2693, 2695, 2693, 2693, 2693, 2693, 2693, 2693, 2693, 2693,
     2693, 2693, 2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703,
     2704, 2705, 2704, 2704, 2704, 2706, 2704, 2704, 2704, 2704,
     2704, 2704, 2704, 2704, 2704, 2704, 2707, 2708, 2709, 2710,
     2711, 2712, 2713, 2714, 2715, 2716, 2715, 2715, 2715, 2717,
     2715, 2715, 2715, 2715, 2715, 2715, 2715, 2715, 2715, 2715,
     2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727,
     2726, 2726, 2728, 2729, 2730, 2731, 2732, 2726, 2726, 2733,
     2734, 2735, 2726, 2736, 2738, 2738, 2738, 2739, 2739, 2740,
     2740, 2741, 2741, 2742, 2742, 2743, 2743, 2744, 2744, 2745,

     2745, 2746, 2746, 2747, 2747, 2748, 2748, 2749, 2749, 2750,
     2750, 2751, 2751, 2752, 2752, 2753, 2753, 2754, 2754, 2755,
     2755, 2756, 2756, 2757, 2757, 2758, 2758, 2759, 2759, 2760,
     2760, 2761, 2761, 2762, 2762, 2763, 2763, 2764, 2764, 2765,
     2765, 2766, 2766, 2767, 2767, 2768, 2768, 2769, 2769, 2770,
     2770, 2771, 2771, 2772, 2772, 2773, 2773, 2774, 2774, 2775,
     2775, 2776, 2776, 2777, 2777, 2778, 2778, 2779, 2779, 2780,
     2780, 2781, 2781, 2782, 2782, 2783, 2783, 2784, 2784, 2785,
     2785, 2786, 2786, 2787, 2787, 2788, 2788, 2789, 2789, 2790,
     2790, 2791, 2791, 2792, 2792, 2793, 2793, 2794, 2794, 2795,

     2795, 2796, 2796, 2797, 2797, 2798, 2798, 2799, 2799, 2800,
     2800, 2801, 2801, 2802, 2802, 2803, 2803, 2804, 2804, 2805,
     2805, 2806, 2806, 2807, 2807, 2808, 2808, 2809, 2809, 2810,
     2810, 2811, 2811, 2812, 2812, 2813, 2813, 2814, 2814, 2815,
     2815, 2816, 2816, 2817, 2817, 2818, 2818, 2819, 2819, 2820,
     2820, 2821, 2821, 2822, 2822, 2823, 2823, 2824, 2824, 2825,
     2825, 2826, 2826, 2827, 2827, 2828, 2828, 2829, 2829, 2830,
     2830, 2831, 2831, 2832, 2832, 2833, 2833, 2834, 2834, 2835,
     2835, 2836, 2836, 2837, 2837, 2838, 2838, 2839, 2839, 2840,
     2840, 2841, 2841, 2842, 2842, 2843, 2843, 2844, 2844, 2845,

     2845, 2846, 2846, 2847, 2847, 2848, 2848, 2849, 2849, 2850,
     2850, 2851, 2851, 2852, 2852, 2853, 2853, 2854, 2854, 2855,
     2855, 2856, 2856, 2857, 2857, 2858, 2858, 2859, 2859, 2860,
     2860, 2861, 2861, 2862, 2862, 2863, 2863, 2864, 2864, 2865,
     2865, 2866, 2866, 2867, 2867, 2868, 2868, 2869, 2869, 2870,
     2870, 2871, 2871, 2872, 2872, 2873, 2873, 2874, 2874, 2875,
     2875, 2876, 2876, 2877, 2877, 2878, 2878, 2879, 2879, 2880,
     2880, 2881, 2881, 2882, 2882, 2883, 2883, 2884, 2884, 2885,
     2885, 2886, 2886, 2887, 2887, 2888, 2888, 2889, 2889, 2890,
     2890, 2891, 2891, 2892, 2892, 2893, 2893, 2894, 2894, 2895,

     2895, 2896, 2896, 2897, 2897, 2898, 2898, 2899, 2899, 2900,
     2900, 2901, 2901, 2902, 2902, 2903, 2903, 2904, 2904, 2905,
     2905, 2906, 2906, 2907, 2907, 2908, 2908, 2909, 2909, 2910,
     2910, 2911, 2911, 2912, 2912, 2913, 2913, 2914, 2914, 2915,
     2915, 2916, 2916, 2917, 2917, 2918, 2918, 2919, 2919, 2920,
     2920, 2921, 2921, 2922, 2922, 2923, 2923, 2924, 2924, 2925,
     2925, 2926, 2926, 2927, 2927, 2928, 2928, 2929, 2929, 2930,
     2930, 2931, 2931, 2932, 2932, 2933, 2933, 2934, 2934, 2935,
     2935, 2936, 2936, 2937, 2937, 2938, 2938, 2939, 2939, 2940,
     2940, 2941, 2941, 2942, 2942, 2943, 2943, 2944, 2944, 2945,

     2945, 2946, 2946, 2947, 2947, 2948, 2948, 2949, 2949, 2950,
     2950, 2951, 2951, 2952, 2952, 2953, 2953, 2954, 2954, 2955,
     2955, 2956, 2956, 2957, 2957, 2958, 2958, 2959, 2959, 2960,
     2960, 2961, 2961, 2962, 2962, 2963, 2963, 2964, 2964, 2965,
     2965,  551,  550,  549,  548,  546,  545,  544,  543,  542,
      541,  540,  539,  538,  537,  536,  534,  533,  532,  531,
      530,  529,  528,  527,  526,  525,  524,  522,  521,  520,
      519,  518,  517,  516,  515,  514,  513,  512,  510,  509,
      508,  507,  506,  505,  504,  503,  502,  501,  500,  498,
      497,  496,  495,  494,  493,  492,  491,  490,  489,  488,

      486,  485,  484,  483,  482,  481,  480,  479,  478,  477,
      476,  474,  473,  472,  471,  470,  469,  468,  467,  466,
      465,  464,  462,  461,  460,  459,  458,  457,  456,  455,
      454,  453,  452,  450,  449,  448,  447,  446,  445,  444,
      443,  442,  441,  440,  438,  437,  436,  435,  434,  433,
      432,  431,  430,  429,  428,  426,  425,  424,  423,  422,
      421,  420,  419,  418,  417,  416,  414,  413,  412,  411,
      410,  409,  408,  407,  406,  405,  404,  402,  401,  400,
      399,  398,  397,  396,  395,  394,  393,  392,  390,  389,
      388,  387,  386,  385,  384,  383,  382,  381,  380,  378,

      377,  376,  375,  374,  373,  372,  371,  370,  369,  368,
      366,  365,  364,  363,  362,  361,  360,  359,  358,  357,
      356,  354,  353,  352,  351,  350,  349,  348,  347,  346,
      345,  344,  342,  341,  340,  339,  338,  337,  336,  335,
      334,  333,  332,  330,  329,  328,  327,  326,  325,  324,
      323,  322,  321,  320,  318,  317,  316,  315,  314,  313,
      312,  311,  310,  309,  308,  306,  305,  304,  303,  302,
      301,  300,  299,  298,  297,  296,  294,  293,  292,  291,
      290,  289,  288,  287,  286,  285,  284,  282,  281,  280,
      279,  278,  277,  276,  275,  274,  273,  272,  270,  269,

      268,  267,  266,  265,  264,  263,  262,  261,  260,  258,
      257,  256,  255,  254,  253,  252,  251,  250,  249,  248,
      246,  245,  244,  243,  242,  241,  240,  239,  238,  237,
      236,  234,  233,  232,  231,  230,  229,  228,  227,  226,
      225,  224,  222,  221,  220,  219,  218,  217,  216,  215,
      214,  213,  212,  210,  209,  208,  207,  206,  205,  204,
      203,  202,  201,  200,  198,  197,  196,  195,  194,  193,
      192,  191,  190,  189,  188,  186,  185,  184,  183,  182,
      181,  180,  179,  178,  177,  176,  174,  173,  172,  171,
      170,  169,  168,  167,  166,  165,  164,  162,  161,  160,

      159,  158,  157,  156,  155,  154,  153,  152,  150,  149,
      148,  147,  146,  145,  144,  143,  142,  141,  140,  138,
      137,  136,  135,  134,  133,  132,  131,  130,  129,  128,
      127,  125,  124,  123,  122,  121,  120,  119,  118,  117,
      116,  115,  114,  113,  112,  110,  109,  108,  107,  106,
      105,  104,  103,  102,  101,  100,   99,   98,   97,   95,
       94,   93,   92,   91,   89,   88,   87,   86,   85,   84,
       83,   82,   81,   80,   78,   77,   75,   74,   73,   72,
       71,   70,   69,   68,   67,   65,   64,   63,   62,   61,
       60,   59,   58,   57,   56,   54,   53,   52,   51,   50,

       49,   48,   46,   45,   44,   43,   40,   39,   38,   36,
       35,   34,   33,   32,   31,   30,   29,   28,   27,   26,
       24,   23,   22,   21,   20,   19,   17,   16,   15,   14,
       13,   12,   11,   10,    9,    8,    7,    6,    5,    3,
     2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737,
     2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737
    } ;

/* The intent behind this definition is that it'll catch
 * any uses of REJECT which flex missed.
 */
#define REJECT reject_used_but_not_detected
#define yymore() yymore_used_but_not_detected
#define YY_MORE_ADJ 0
#define YY_RESTORE_YY_MORE_OFFSET
#line 1 "flex.l"
#line 5 "flex.l"
#include <stdlib.h>
#line 2701 "lex.yy.cc"
#line 2702 "lex.yy.cc"

#define INITIAL 0

#ifndef YY_NO_UNISTD_H
/* Special case for "unistd.h", since it is non-ANSI. We include it way
 * down here because we want the user's section 1 to have been scanned first.
 * The user has a chance to override it with an option.
 */
#include <unistd.h>
#endif

#ifndef YY_EXTRA_TYPE
#define YY_EXTRA_TYPE void *
#endif

#ifndef yytext_ptr
static void yy_flex_strncpy ( char *, const char *, int );
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen ( const char * );
#endif

#ifndef YY_NO_INPUT

#endif

/* Amount of stuff to slurp up with each read. */
#ifndef YY_READ_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k */
#define YY_READ_BUF_SIZE 16384
#else
#define YY_READ_BUF_SIZE 8192
#endif /* __ia64__ */
#endif

/* Copy whatever the last rule matched to the standard output. */
#ifndef ECHO
#define ECHO LexerOutput( yytext, yyleng )
#endif

/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
 * is returned in "result".
 */
#ifndef YY_INPUT
#define YY_INPUT(buf,result,max_size) \
\
	if ( (int)(result = LexerInput( (char *) buf, max_size )) < 0 ) \
		YY_FATAL_ERROR( "input in flex scanner failed" );

#endif

/* No semi-colon after return; correct usage is to write "yyterminate();" -
 * we don't want an extra ';' after the "return" because that will cause
 * some compilers to complain about unreachable statements.
 */
#ifndef yyterminate
#define yyterminate() return YY_NULL
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef YY_START_STACK_INCR
#define YY_START_STACK_INCR 25
#endif

/* Report a fatal error. */
#ifndef YY_FATAL_ERROR
#define YY_FATAL_ERROR(msg) LexerError( msg )
#endif

/* end tables serialization structures and prototypes */

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef YY_DECL
#define YY_DECL_IS_OURS 1
#define YY_DECL int yyFlexLexer::yylex()
#endif /* !YY_DECL */

/* Code executed at the beginning of each rule, after yytext and yyleng
 * have been set up.
 */
#ifndef YY_USER_ACTION
#define YY_USER_ACTION
#endif

/* Code executed at the end of each rule. */
#ifndef YY_BREAK
#define YY_BREAK /*LINTED*/break;
#endif

#define YY_RULE_SETUP \
	YY_USER_ACTION

/** The main scanner function which does all the work.
 */
YY_DECL
{
	yy_state_type yy_current_state;
	char *yy_cp, *yy_bp;
	int yy_act;
    
	if ( !(yy_init) )
		{
		(yy_init) = 1;

#ifdef YY_USER_INIT
		YY_USER_INIT;
#endif

		if ( ! (yy_start) )
			(yy_start) = 1;	/* first start state */

		if ( ! yyin )
			yyin.rdbuf(std::cin.rdbuf());

		if ( ! yyout )
			yyout.rdbuf(std::cout.rdbuf());

		if ( ! YY_CURRENT_BUFFER ) {
			yyensure_buffer_stack ();
			YY_CURRENT_BUFFER_LVALUE =
				yy_create_buffer( yyin, YY_BUF_SIZE );
		}

		yy_load_buffer_state(  );
		}

	{
#line 17 "flex.l"

#line 2836 "lex.yy.cc"

	while ( /*CONSTCOND*/1 )		/* loops until end-of-file is reached */
		{
		yy_cp = (yy_c_buf_p);

		/* Support of yytext. */
		*yy_cp = (yy_hold_char);

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

		yy_current_state = (yy_start);
yy_match:
		do
			{
			YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)] ;
			if ( yy_accept[yy_current_state] )
				{
				(yy_last_accepting_state) = yy_current_state;
				(yy_last_accepting_cpos) = yy_cp;
				}
			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
				{
				yy_current_state = (int) yy_def[yy_current_state];
				if ( yy_current_state >= 2738 )
					yy_c = yy_meta[yy_c];
				}
			yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
			++yy_cp;
			}
		while ( yy_base[yy_current_state] != 6141 );

yy_find_action:
		yy_act = yy_accept[yy_current_state];
		if ( yy_act == 0 )
			{ /* have to back up */
			yy_cp = (yy_last_accepting_cpos);
			yy_current_state = (yy_last_accepting_state);
			yy_act = yy_accept[yy_current_state];
			}

		YY_DO_BEFORE_ACTION;

do_action:	/* This label is used only to access EOF actions. */

		switch ( yy_act )
	{ /* beginning of action switch */
			case 0: /* must back up */
			/* undo the effects of YY_DO_BEFORE_ACTION */
			*yy_cp = (yy_hold_char);
			yy_cp = (yy_last_accepting_cpos);
			yy_current_state = (yy_last_accepting_state);
			goto yy_find_action;

case 1:
/* rule 1 can match eol */
YY_RULE_SETUP
#line 18 "flex.l"
{std::cout << "GOOD\n";} 
	YY_BREAK
case 2:
YY_RULE_SETUP
#line 19 "flex.l"
ECHO;
	YY_BREAK
#line 2904 "lex.yy.cc"
case YY_STATE_EOF(INITIAL):
	yyterminate();

	case YY_END_OF_BUFFER:
		{
		/* Amount of text matched not including the EOB char. */
		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;

		/* Undo the effects of YY_DO_BEFORE_ACTION. */
		*yy_cp = (yy_hold_char);
		YY_RESTORE_YY_MORE_OFFSET

		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
			{
			/* We're scanning a new file or input source.  It's
			 * possible that this happened because the user
			 * just pointed yyin at a new source and called
			 * yylex().  If so, then we have to assure
			 * consistency between YY_CURRENT_BUFFER and our
			 * globals.  Here is the right place to do so, because
			 * this is the first action (other than possibly a
			 * back-up) that will match for the new input source.
			 */
			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin.rdbuf();
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
			}

		/* Note that here we test for yy_c_buf_p "<=" to the position
		 * of the first EOB in the buffer, since yy_c_buf_p will
		 * already have been incremented past the NUL character
		 * (since all states make transitions on EOB to the
		 * end-of-buffer state).  Contrast this with the test
		 * in input().
		 */
		if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
			{ /* This was really a NUL. */
			yy_state_type yy_next_state;

			(yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;

			yy_current_state = yy_get_previous_state(  );

			/* Okay, we're now positioned to make the NUL
			 * transition.  We couldn't have
			 * yy_get_previous_state() go ahead and do it
			 * for us because it doesn't know how to deal
			 * with the possibility of jamming (and we don't
			 * want to build jamming into it because then it
			 * will run more slowly).
			 */

			yy_next_state = yy_try_NUL_trans( yy_current_state );

			yy_bp = (yytext_ptr) + YY_MORE_ADJ;

			if ( yy_next_state )
				{
				/* Consume the NUL. */
				yy_cp = ++(yy_c_buf_p);
				yy_current_state = yy_next_state;
				goto yy_match;
				}

			else
				{
				yy_cp = (yy_c_buf_p);
				goto yy_find_action;
				}
			}

		else switch ( yy_get_next_buffer(  ) )
			{
			case EOB_ACT_END_OF_FILE:
				{
				(yy_did_buffer_switch_on_eof) = 0;

				if ( yywrap(  ) )
					{
					/* Note: because we've taken care in
					 * yy_get_next_buffer() to have set up
					 * yytext, we can now set up
					 * yy_c_buf_p so that if some total
					 * hoser (like flex itself) wants to
					 * call the scanner after we return the
					 * YY_NULL, it'll still work - another
					 * YY_NULL will get returned.
					 */
					(yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;

					yy_act = YY_STATE_EOF(YY_START);
					goto do_action;
					}

				else
					{
					if ( ! (yy_did_buffer_switch_on_eof) )
						YY_NEW_FILE;
					}
				break;
				}

			case EOB_ACT_CONTINUE_SCAN:
				(yy_c_buf_p) =
					(yytext_ptr) + yy_amount_of_matched_text;

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
				goto yy_match;

			case EOB_ACT_LAST_MATCH:
				(yy_c_buf_p) =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
				goto yy_find_action;
			}
		break;
		}

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
	} /* end of user's declarations */
} /* end of yylex */

/* The contents of this function are C++ specific, so the () macro is not used.
 * This constructor simply maintains backward compatibility.
 * DEPRECATED
 */
yyFlexLexer::yyFlexLexer( std::istream* arg_yyin, std::ostream* arg_yyout ):
	yyin(arg_yyin ? arg_yyin->rdbuf() : std::cin.rdbuf()),
	yyout(arg_yyout ? arg_yyout->rdbuf() : std::cout.rdbuf())
{
	ctor_common();
}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
yyFlexLexer::yyFlexLexer( std::istream& arg_yyin, std::ostream& arg_yyout ):
	yyin(arg_yyin.rdbuf()),
	yyout(arg_yyout.rdbuf())
{
	ctor_common();
}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
void yyFlexLexer::ctor_common()
{
	yy_c_buf_p = 0;
	yy_init = 0;
	yy_start = 0;
	yy_flex_debug = 0;
	yylineno = 1;	// this will only get updated if %option yylineno

	yy_did_buffer_switch_on_eof = 0;

	yy_looking_for_trail_begin = 0;
	yy_more_flag = 0;
	yy_more_len = 0;
	yy_more_offset = yy_prev_more_offset = 0;

	yy_start_stack_ptr = yy_start_stack_depth = 0;
	yy_start_stack = NULL;

	yy_buffer_stack = NULL;
	yy_buffer_stack_top = 0;
	yy_buffer_stack_max = 0;

	yy_state_buf = 0;

}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
yyFlexLexer::~yyFlexLexer()
{
	delete [] yy_state_buf;
	yyfree( yy_start_stack  );
	yy_delete_buffer( YY_CURRENT_BUFFER );
	yyfree( yy_buffer_stack  );
}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
void yyFlexLexer::switch_streams( std::istream& new_in, std::ostream& new_out )
{
	// was if( new_in )
	yy_delete_buffer( YY_CURRENT_BUFFER );
	yy_switch_to_buffer( yy_create_buffer( new_in, YY_BUF_SIZE  ) );

	// was if( new_out )
	yyout.rdbuf(new_out.rdbuf());
}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
void yyFlexLexer::switch_streams( std::istream* new_in, std::ostream* new_out )
{
	if( ! new_in ) {
		new_in = &yyin;
	}

	if ( ! new_out ) {
		new_out = &yyout;
	}

	switch_streams(*new_in, *new_out);
}

#ifdef YY_INTERACTIVE
int yyFlexLexer::LexerInput( char* buf, int /* max_size */ )
#else
int yyFlexLexer::LexerInput( char* buf, int max_size )
#endif
{
	if ( yyin.eof() || yyin.fail() )
		return 0;

#ifdef YY_INTERACTIVE
	yyin.get( buf[0] );

	if ( yyin.eof() )
		return 0;

	if ( yyin.bad() )
		return -1;

	return 1;

#else
	(void) yyin.read( buf, max_size );

	if ( yyin.bad() )
		return -1;
	else
		return yyin.gcount();
#endif
}

void yyFlexLexer::LexerOutput( const char* buf, int size )
{
	(void) yyout.write( buf, size );
}

/* yy_get_next_buffer - try to read in a new buffer
 *
 * Returns a code representing an action:
 *	EOB_ACT_LAST_MATCH -
 *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
 *	EOB_ACT_END_OF_FILE - end of file
 */
int yyFlexLexer::yy_get_next_buffer()
{
    	char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
	char *source = (yytext_ptr);
	int number_to_move, i;
	int ret_val;

	if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
		YY_FATAL_ERROR(
		"fatal flex scanner internal error--end of buffer missed" );

	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
		{ /* Don't try to fill the buffer, so this is an EOF. */
		if ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )
			{
			/* We matched a single character, the EOB, so
			 * treat this as a final EOF.
			 */
			return EOB_ACT_END_OF_FILE;
			}

		else
			{
			/* We matched some text prior to the EOB, first
			 * process it.
			 */
			return EOB_ACT_LAST_MATCH;
			}
		}

	/* Try to read more data. */

	/* First move last chars to start of buffer. */
	number_to_move = (int) ((yy_c_buf_p) - (yytext_ptr) - 1);

	for ( i = 0; i < number_to_move; ++i )
		*(dest++) = *(source++);

	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
		/* don't do the read, it's not guaranteed to return an EOF,
		 * just force an EOF
		 */
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;

	else
		{
			int num_to_read =
			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;

		while ( num_to_read <= 0 )
			{ /* Not enough room in the buffer - grow it. */

			/* just a shorter name for the current buffer */
			YY_BUFFER_STATE b = YY_CURRENT_BUFFER_LVALUE;

			int yy_c_buf_p_offset =
				(int) ((yy_c_buf_p) - b->yy_ch_buf);

			if ( b->yy_is_our_buffer )
				{
				int new_size = b->yy_buf_size * 2;

				if ( new_size <= 0 )
					b->yy_buf_size += b->yy_buf_size / 8;
				else
					b->yy_buf_size *= 2;

				b->yy_ch_buf = (char *)
					/* Include room in for 2 EOB chars. */
					yyrealloc( (void *) b->yy_ch_buf,
							 (yy_size_t) (b->yy_buf_size + 2)  );
				}
			else
				/* Can't grow it, we don't own it. */
				b->yy_ch_buf = NULL;

			if ( ! b->yy_ch_buf )
				YY_FATAL_ERROR(
				"fatal error - scanner input buffer overflow" );

			(yy_c_buf_p) = &b->yy_ch_buf[yy_c_buf_p_offset];

			num_to_read = YY_CURRENT_BUFFER_LVALUE->yy_buf_size -
						number_to_move - 1;

			}

		if ( num_to_read > YY_READ_BUF_SIZE )
			num_to_read = YY_READ_BUF_SIZE;

		/* Read in more data. */
		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
			(yy_n_chars), num_to_read );

		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	if ( (yy_n_chars) == 0 )
		{
		if ( number_to_move == YY_MORE_ADJ )
			{
			ret_val = EOB_ACT_END_OF_FILE;
			yyrestart( yyin  );
			}

		else
			{
			ret_val = EOB_ACT_LAST_MATCH;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
				YY_BUFFER_EOF_PENDING;
			}
		}

	else
		ret_val = EOB_ACT_CONTINUE_SCAN;

	if (((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
		/* Extend the array by 50%, plus the number we really need. */
		int new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);
		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc(
			(void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf, (yy_size_t) new_size  );
		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
		/* "- 2" to take care of EOB's */
		YY_CURRENT_BUFFER_LVALUE->yy_buf_size = (int) (new_size - 2);
	}

	(yy_n_chars) += number_to_move;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;

	(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];

	return ret_val;
}

/* yy_get_previous_state - get the state just before the EOB char was reached */

    yy_state_type yyFlexLexer::yy_get_previous_state()
{
	yy_state_type yy_current_state;
	char *yy_cp;
    
	yy_current_state = (yy_start);

	for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
		{
		YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
		if ( yy_accept[yy_current_state] )
			{
			(yy_last_accepting_state) = yy_current_state;
			(yy_last_accepting_cpos) = yy_cp;
			}
		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
			{
			yy_current_state = (int) yy_def[yy_current_state];
			if ( yy_current_state >= 2738 )
				yy_c = yy_meta[yy_c];
			}
		yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
		}

	return yy_current_state;
}

/* yy_try_NUL_trans - try to make a transition on the NUL character
 *
 * synopsis
 *	next_state = yy_try_NUL_trans( current_state );
 */
    yy_state_type yyFlexLexer::yy_try_NUL_trans( yy_state_type yy_current_state )
{
	int yy_is_jam;
    	char *yy_cp = (yy_c_buf_p);

	YY_CHAR yy_c = 1;
	if ( yy_accept[yy_current_state] )
		{
		(yy_last_accepting_state) = yy_current_state;
		(yy_last_accepting_cpos) = yy_cp;
		}
	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
		{
		yy_current_state = (int) yy_def[yy_current_state];
		if ( yy_current_state >= 2738 )
			yy_c = yy_meta[yy_c];
		}
	yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
	yy_is_jam = (yy_current_state == 2737);

		return yy_is_jam ? 0 : yy_current_state;
}

#ifndef YY_NO_UNPUT
    void yyFlexLexer::yyunput( int c, char* yy_bp)
{
	char *yy_cp;
    
    yy_cp = (yy_c_buf_p);

	/* undo effects of setting up yytext */
	*yy_cp = (yy_hold_char);

	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
		{ /* need to shift things up to make room */
		/* +2 for EOB chars. */
		int number_to_move = (yy_n_chars) + 2;
		char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
		char *source =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];

		while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			*--dest = *--source;

		yy_cp += (int) (dest - source);
		yy_bp += (int) (dest - source);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
			(yy_n_chars) = (int) YY_CURRENT_BUFFER_LVALUE->yy_buf_size;

		if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
			YY_FATAL_ERROR( "flex scanner push-back overflow" );
		}

	*--yy_cp = (char) c;

	(yytext_ptr) = yy_bp;
	(yy_hold_char) = *yy_cp;
	(yy_c_buf_p) = yy_cp;
}
#endif

    int yyFlexLexer::yyinput()
{
	int c;
    
	*(yy_c_buf_p) = (yy_hold_char);

	if ( *(yy_c_buf_p) == YY_END_OF_BUFFER_CHAR )
		{
		/* yy_c_buf_p now points to the character we want to return.
		 * If this occurs *before* the EOB characters, then it's a
		 * valid NUL; if not, then we've hit the end of the buffer.
		 */
		if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
			/* This was really a NUL. */
			*(yy_c_buf_p) = '\0';

		else
			{ /* need more input */
			int offset = (int) ((yy_c_buf_p) - (yytext_ptr));
			++(yy_c_buf_p);

			switch ( yy_get_next_buffer(  ) )
				{
				case EOB_ACT_LAST_MATCH:
					/* This happens because yy_g_n_b()
					 * sees that we've accumulated a
					 * token and flags that we need to
					 * try matching the token before
					 * proceeding.  But for input(),
					 * there's no matching to consider.
					 * So convert the EOB_ACT_LAST_MATCH
					 * to EOB_ACT_END_OF_FILE.
					 */

					/* Reset buffer status. */
					yyrestart( yyin );

					/*FALLTHROUGH*/

				case EOB_ACT_END_OF_FILE:
					{
					if ( yywrap(  ) )
						return 0;

					if ( ! (yy_did_buffer_switch_on_eof) )
						YY_NEW_FILE;
#ifdef __cplusplus
					return yyinput();
#else
					return input();
#endif
					}

				case EOB_ACT_CONTINUE_SCAN:
					(yy_c_buf_p) = (yytext_ptr) + offset;
					break;
				}
			}
		}

	c = *(unsigned char *) (yy_c_buf_p);	/* cast for 8-bit char's */
	*(yy_c_buf_p) = '\0';	/* preserve yytext */
	(yy_hold_char) = *++(yy_c_buf_p);

	return c;
}

/** Immediately switch to a different input stream.
 * @param input_file A readable stream.
 * 
 * @note This function does not reset the start condition to @c INITIAL .
 */
    void yyFlexLexer::yyrestart( std::istream& input_file )
{
    
	if ( ! YY_CURRENT_BUFFER ){
        yyensure_buffer_stack ();
		YY_CURRENT_BUFFER_LVALUE =
            yy_create_buffer( yyin, YY_BUF_SIZE );
	}

	yy_init_buffer( YY_CURRENT_BUFFER, input_file );
	yy_load_buffer_state(  );
}

/** Delegate to the new version that takes an istream reference.
 * @param input_file A readable stream.
 * 
 * @note This function does not reset the start condition to @c INITIAL .
 */
void yyFlexLexer::yyrestart( std::istream* input_file )
{
	if( ! input_file ) {
		input_file = &yyin;
	}
	yyrestart( *input_file );
}

/** Switch to a different input buffer.
 * @param new_buffer The new input buffer.
 * 
 */
    void yyFlexLexer::yy_switch_to_buffer( YY_BUFFER_STATE new_buffer )
{
    
	/* TODO. We should be able to replace this entire function body
	 * with
	 *		yypop_buffer_state();
	 *		yypush_buffer_state(new_buffer);
     */
	yyensure_buffer_stack ();
	if ( YY_CURRENT_BUFFER == new_buffer )
		return;

	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*(yy_c_buf_p) = (yy_hold_char);
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	YY_CURRENT_BUFFER_LVALUE = new_buffer;
	yy_load_buffer_state(  );

	/* We don't actually know whether we did this switch during
	 * EOF (yywrap()) processing, but the only time this flag
	 * is looked at is after yywrap() is called, so it's safe
	 * to go ahead and always set it.
	 */
	(yy_did_buffer_switch_on_eof) = 1;
}

    void yyFlexLexer::yy_load_buffer_state()
{
    	(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
	(yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
	yyin.rdbuf(YY_CURRENT_BUFFER_LVALUE->yy_input_file);
	(yy_hold_char) = *(yy_c_buf_p);
}

/** Allocate and initialize an input buffer state.
 * @param file A readable stream.
 * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
 * 
 * @return the allocated buffer state.
 */
    YY_BUFFER_STATE yyFlexLexer::yy_create_buffer( std::istream& file, int size )
{
	YY_BUFFER_STATE b;
    
	b = (YY_BUFFER_STATE) yyalloc( sizeof( struct yy_buffer_state )  );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_buf_size = size;

	/* yy_ch_buf has to be 2 characters longer than the size given because
	 * we need to put in 2 end-of-buffer characters.
	 */
	b->yy_ch_buf = (char *) yyalloc( (yy_size_t) (b->yy_buf_size + 2)  );
	if ( ! b->yy_ch_buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_is_our_buffer = 1;

	yy_init_buffer( b, file );

	return b;
}

/** Delegate creation of buffers to the new version that takes an istream reference.
 * @param file A readable stream.
 * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
 * 
 * @return the allocated buffer state.
 */
	YY_BUFFER_STATE yyFlexLexer::yy_create_buffer( std::istream* file, int size )
{
	return yy_create_buffer( *file, size );
}

/** Destroy the buffer.
 * @param b a buffer created with yy_create_buffer()
 * 
 */
    void yyFlexLexer::yy_delete_buffer( YY_BUFFER_STATE b )
{
    
	if ( ! b )
		return;

	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;

	if ( b->yy_is_our_buffer )
		yyfree( (void *) b->yy_ch_buf  );

	yyfree( (void *) b  );
}

/* Initializes or reinitializes a buffer.
 * This function is sometimes called more than once on the same buffer,
 * such as during a yyrestart() or at EOF.
 */
    void yyFlexLexer::yy_init_buffer( YY_BUFFER_STATE b, std::istream& file )

{
	int oerrno = errno;
    
	yy_flush_buffer( b );

	b->yy_input_file = file.rdbuf();
	b->yy_fill_buffer = 1;

    /* If b is the current buffer, then yy_init_buffer was _probably_
     * called from yyrestart() or through yy_get_next_buffer.
     * In that case, we don't want to reset the lineno or column.
     */
    if (b != YY_CURRENT_BUFFER){
        b->yy_bs_lineno = 1;
        b->yy_bs_column = 0;
    }

	b->yy_is_interactive = 0;
	errno = oerrno;
}

/** Discard all buffered characters. On the next scan, YY_INPUT will be called.
 * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
 * 
 */
    void yyFlexLexer::yy_flush_buffer( YY_BUFFER_STATE b )
{
    	if ( ! b )
		return;

	b->yy_n_chars = 0;

	/* We always need two end-of-buffer characters.  The first causes
	 * a transition to the end-of-buffer state.  The second causes
	 * a jam in that state.
	 */
	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;

	b->yy_buf_pos = &b->yy_ch_buf[0];

	b->yy_at_bol = 1;
	b->yy_buffer_status = YY_BUFFER_NEW;

	if ( b == YY_CURRENT_BUFFER )
		yy_load_buffer_state(  );
}

/** Pushes the new state onto the stack. The new state becomes
 *  the current state. This function will allocate the stack
 *  if necessary.
 *  @param new_buffer The new state.
 *  
 */
void yyFlexLexer::yypush_buffer_state (YY_BUFFER_STATE new_buffer)
{
    	if (new_buffer == NULL)
		return;

	yyensure_buffer_stack();

	/* This block is copied from yy_switch_to_buffer. */
	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*(yy_c_buf_p) = (yy_hold_char);
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	/* Only push if top exists. Otherwise, replace top. */
	if (YY_CURRENT_BUFFER)
		(yy_buffer_stack_top)++;
	YY_CURRENT_BUFFER_LVALUE = new_buffer;

	/* copied from yy_switch_to_buffer. */
	yy_load_buffer_state(  );
	(yy_did_buffer_switch_on_eof) = 1;
}

/** Removes and deletes the top of the stack, if present.
 *  The next element becomes the new top.
 *  
 */
void yyFlexLexer::yypop_buffer_state (void)
{
    	if (!YY_CURRENT_BUFFER)
		return;

	yy_delete_buffer(YY_CURRENT_BUFFER );
	YY_CURRENT_BUFFER_LVALUE = NULL;
	if ((yy_buffer_stack_top) > 0)
		--(yy_buffer_stack_top);

	if (YY_CURRENT_BUFFER) {
		yy_load_buffer_state(  );
		(yy_did_buffer_switch_on_eof) = 1;
	}
}

/* Allocates the stack if it does not exist.
 *  Guarantees space for at least one push.
 */
void yyFlexLexer::yyensure_buffer_stack(void)
{
	yy_size_t num_to_alloc;
    
	if (!(yy_buffer_stack)) {

		/* First allocation is just for 2 elements, since we don't know if this
		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
		 * immediate realloc on the next call.
         */
      num_to_alloc = 1; /* After all that talk, this was set to 1 anyways... */
		(yy_buffer_stack) = (struct yy_buffer_state**)yyalloc
								(num_to_alloc * sizeof(struct yy_buffer_state*)
								);
		if ( ! (yy_buffer_stack) )
			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );

		memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));

		(yy_buffer_stack_max) = num_to_alloc;
		(yy_buffer_stack_top) = 0;
		return;
	}

	if ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){

		/* Increase the buffer to prepare for a possible push. */
		yy_size_t grow_size = 8 /* arbitrary grow size */;

		num_to_alloc = (yy_buffer_stack_max) + grow_size;
		(yy_buffer_stack) = (struct yy_buffer_state**)yyrealloc
								((yy_buffer_stack),
								num_to_alloc * sizeof(struct yy_buffer_state*)
								);
		if ( ! (yy_buffer_stack) )
			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );

		/* zero only the new slots.*/
		memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
		(yy_buffer_stack_max) = num_to_alloc;
	}
}

    void yyFlexLexer::yy_push_state( int _new_state )
{
    	if ( (yy_start_stack_ptr) >= (yy_start_stack_depth) )
		{
		yy_size_t new_size;

		(yy_start_stack_depth) += YY_START_STACK_INCR;
		new_size = (yy_size_t) (yy_start_stack_depth) * sizeof( int );

		if ( ! (yy_start_stack) )
			(yy_start_stack) = (int *) yyalloc( new_size  );

		else
			(yy_start_stack) = (int *) yyrealloc(
					(void *) (yy_start_stack), new_size  );

		if ( ! (yy_start_stack) )
			YY_FATAL_ERROR( "out of memory expanding start-condition stack" );
		}

	(yy_start_stack)[(yy_start_stack_ptr)++] = YY_START;

	BEGIN(_new_state);
}

    void yyFlexLexer::yy_pop_state()
{
    	if ( --(yy_start_stack_ptr) < 0 )
		YY_FATAL_ERROR( "start-condition stack underflow" );

	BEGIN((yy_start_stack)[(yy_start_stack_ptr)]);
}

    int yyFlexLexer::yy_top_state()
{
    	return (yy_start_stack)[(yy_start_stack_ptr) - 1];
}

#ifndef YY_EXIT_FAILURE
#define YY_EXIT_FAILURE 2
#endif

void yyFlexLexer::LexerError( const char* msg )
{
    	std::cerr << msg << std::endl;
	exit( YY_EXIT_FAILURE );
}

/* Redefine yyless() so it works in section 3 code. */

#undef yyless
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		yytext[yyleng] = (yy_hold_char); \
		(yy_c_buf_p) = yytext + yyless_macro_arg; \
		(yy_hold_char) = *(yy_c_buf_p); \
		*(yy_c_buf_p) = '\0'; \
		yyleng = yyless_macro_arg; \
		} \
	while ( 0 )

/* Accessor  methods (get/set functions) to struct members. */

/*
 * Internal utility routines.
 */

#ifndef yytext_ptr
static void yy_flex_strncpy (char* s1, const char * s2, int n )
{
		
	int i;
	for ( i = 0; i < n; ++i )
		s1[i] = s2[i];
}
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (const char * s )
{
	int n;
	for ( n = 0; s[n]; ++n )
		;

	return n;
}
#endif

void *yyalloc (yy_size_t  size )
{
			return malloc(size);
}

void *yyrealloc  (void * ptr, yy_size_t  size )
{
		
	/* The cast to (char *) in the following accommodates both
	 * implementations that use char* generic pointers, and those
	 * that use void* generic pointers.  It works with the latter
	 * because both ANSI C and C++ allow castless assignment from
	 * any pointer type to void*, and deal with argument conversions
	 * as though doing an assignment.
	 */
	return realloc(ptr, size);
}

void yyfree (void * ptr )
{
			free( (char *) ptr );	/* see yyrealloc() for (char *) cast */
}

#define YYTABLES_NAME "yytables"

#line 19 "flex.l"


#include <iostream>
#include <fstream>
#include <FlexLexer.h>
int main()
{
    yyFlexLexer flp;
    while (std::cin.good())
	if (flp.yylex())
		std::cout << "good\n";
	else
		std::cout<<"bad\n";
}

